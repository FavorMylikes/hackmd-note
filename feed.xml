<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://ucas.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ucas.io/" rel="alternate" type="text/html" /><updated>2021-09-21T19:04:21+08:00</updated><id>https://ucas.io/feed.xml</id><title type="html">Notes B</title><subtitle>A place for notes on various topics.</subtitle><author><name>麦丽素</name></author><entry><title type="html">Texture Paper Reading - [Rethinking Texture Mapping]</title><link href="https://ucas.io/3d/Texture-Paper-Reading/" rel="alternate" type="text/html" title="Texture Paper Reading - [Rethinking Texture Mapping]" /><published>2021-09-21T19:03:21+08:00</published><updated>2021-09-21T19:03:21+08:00</updated><id>https://ucas.io/3d/Texture-Paper-Reading</id><content type="html" xml:base="https://ucas.io/3d/Texture-Paper-Reading/">&lt;h2 id=&quot;rethinking-texture-mapping---state-of-the-art-report&quot;&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13656&quot;&gt;Rethinking Texture Mapping - State of The Art Report&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/sig_graph-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/EG-2019-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-26-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cemyuksel.com/courses/conferences/siggraph2017-rethinking_texture_mapping/rethinking_texture_mapping_course_notes.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-scope&quot;&gt;1.1 Scope&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Perfecting the Traditional Texture Mapping
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2010.01746.x&quot;&gt;RNLL10 - Invisible Seams&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CGF-2010-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-53-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://hal.inria.fr/inria-00547713/PDF/seamless.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;LFJG17 - Seam Erasure
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.cs.toronto.edu/~jacobson/images/seamless-seam-erasure-and-seam-aware-decoupling-of-shape-from-mesh-resolution-siggraph-asia-2017-compressed-liu-et-al.pdf&quot;&gt;Seamless: seam erasure and seam-aware decoupling of shape from mesh resolution.&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/SIGGRAPH_Asia-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-24-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.cs.toronto.edu/~jacobson/images/seamless-seam-erasure-and-seam-aware-decoupling-of-shape-from-mesh-resolution-siggraph-asia-2017-compressed-liu-et-al.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.tandfonline.com/doi/abs/10.1080/2151237X.2012.654054&quot;&gt;Tar12 - Seamless Toroidal/Cylindrical Textures&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/Journal_of_Graphics_Tools-2012-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-9-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.tandfonline.com/doi/abs/10.1080/2151237X.2012.654054&quot;&gt;Cylindrical and toroidal parameterizations without vertex seams - Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/1057432.1057441&quot;&gt;PCK04 - Seamless Texture Atlases&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SGP-2004-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-98-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://pages.jh.edu/dighamm/research/2004_01_sta.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Connectivity-based Representations
    &lt;ul&gt;
      &lt;li&gt;BL08 - Ptex
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.disneyanimation.com/publications/ptex-per-face-texture-mapping-for-production-rendering/&quot;&gt;Ptex: Per‐face texture mapping for production rendering&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CGF-2008-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-104-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/1731047.1731053&quot;&gt;YKH10 - Mesh Colors&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2010-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-67-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/3105762.3105780&quot;&gt;Yuk16 - Mesh Color Textures&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/HPG-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-10-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sparse Volumetric Textures
    &lt;ul&gt;
      &lt;li&gt;KE02 - Adaptive Texture Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SIGGRAPH-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/EG-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-160-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/pdf/10.5555/569046.569048&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/566654.566652&quot;&gt;BD02,LHN05 - Octree Textures&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-160-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=802C3674FAE16C6BB6DCD5200731CE5C?doi=10.1.1.300.6755&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;CB04 - Brick Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.91.6683&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;An irradiance atlas for global illumination in complex production scene.pdf&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/EGSR-2004-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-99-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Perfect Spatial Hashing
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2006-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-243-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.453.2027&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Volume-based Parameterizations
    &lt;ul&gt;
      &lt;li&gt;LD07 - TileTrees
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SI3D-2007-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-48-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://hal.inria.fr/inria-00606799/document&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;THCM04 - PolyCube-Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2004-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-305-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://irinsubria.uninsubria.it/retrieve/handle/11383/1492755/599/pcm_da_acm.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tar16 - Volume-Encoded UV-Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2016-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-17-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://vcg.isti.cnr.it/volume-encoded-uv-maps/volume-encoded-uv-maps.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;12-evaluation-criteria&quot;&gt;1.2 Evaluation Criteria&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Applicability.&lt;/li&gt;
  &lt;li&gt;Usability.&lt;/li&gt;
  &lt;li&gt;Filtering Quality.
    &lt;ul&gt;
      &lt;li&gt;magnification filtering
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on-the-fly bilinear interpolation&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;minification filtering&lt;/li&gt;
      &lt;li&gt;anisotropic filtering[各向异性过滤]
        &lt;ul&gt;
          &lt;li&gt;allows skewed filter shapes&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Performance.&lt;/li&gt;
  &lt;li&gt;Implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;traditional-2d-texture-mapping&quot;&gt;Traditional 2D Texture Mapping&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;assigning uv coordinates to mesh vertices&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;perfecting-traditional-texture-mapping&quot;&gt;Perfecting Traditional Texture Mapping&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/3197517.3201317&quot;&gt;PKCH18 - Gradient-domain Processing Within a Texture Atlas&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2018-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-12-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/pdf/10.1145/3197517.3201317&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;texture seams and texture distortions&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://patents.google.com/patent/US10192346B2/en&quot;&gt;DGM18 - Generating uv maps for modified meshes - US10192346B2&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/patent-2019-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-2-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;automatize the adaptations of the uv map&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/383259.383307&quot;&gt;SSGH01 - Texture mapping progressive meshes&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SIG_GRAPH-2001-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-900-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;the poor interoperability of LoD-pyramids and atlas-based textures&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;invisible-seams&quot;&gt;Invisible Seams&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921101757.png&quot; alt=&quot;20210921101757&quot; height=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Traditional Texture Mapping
    &lt;ul&gt;
      &lt;li&gt;inconsistent &lt;strong&gt;bilinear filtering&lt;/strong&gt; performed on either side of the seams
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bilinear Filtering&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;alias: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bilinear Interpolation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bilinear texture mapping&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/e/ea/BilinearInterpolation.svg&quot; alt=&quot;wiki&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;
                &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
      f(x, y_1) &amp;= \frac{x_2-x}{x_2-x_1}f(Q_{11}) + \frac{x-x_1}{x_2-x_1}f(Q_{21})\\
      f(x, y_2) &amp;= \frac{x_2-x}{x_2-x_1}f(Q_{12}) + \frac{x-x_1}{x_2-x_1}f(Q_{22})\\
      f(x, y) &amp;= \frac{y_2-y}{y_2-y_1}f(x, y_1) + \frac{y-y_1}{y_2-y_1}f(x, y_2)\\
        &amp;=\frac{1}{(x_2-x_1)(y_2-y_1)}\begin{bmatrix}
            x_2-x&amp;x-x_1
        \end{bmatrix}\begin{bmatrix}
            f(Q_{11})&amp;f(Q_{12})\\f(Q_{21})&amp;f(Q_{22})
        \end{bmatrix}\begin{bmatrix}
        y_2-y\\y-y_1
        \end{bmatrix}
  \end{aligned}
$$&lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;extension: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trilinear interpolation&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;placing both sides of the seams axis-aligned in uv space (either horizontally or vertically) with matching lengths, and assigning texels values that are exactly replicated along the seam.&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;ul&gt;
      &lt;li&gt;cylindrical/toroidal mappings
        &lt;ul&gt;
          &lt;li&gt;[Tar12], [THCM04]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[RNLL10]
    &lt;ul&gt;
      &lt;li&gt;introduces some constraints
        &lt;ol&gt;
          &lt;li&gt;integer resolution jumps across seams
            &lt;ul&gt;
              &lt;li&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;one side of the seam to be &lt;strong&gt;n times&lt;/strong&gt; the other, here $n \ge 1, n \in \mathbb{Z}$, longer side are &lt;strong&gt;linear interpolations&lt;/strong&gt; of the values on the shorter side&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921143206.png&quot; alt=&quot;20210921143206&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;generating uv layouts with motorcycle graphs[SPGT18]
                &lt;ul&gt;
                  &lt;li&gt;motorcycle graphs
                    &lt;ul&gt;
                      &lt;li&gt;&lt;a href=&quot;https://www.imdb.com/video/vi4228627993?playlistId=tt0084827&amp;amp;ref_=tt_ov_vi&quot;&gt;Tron 1982 movie - imdb&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href=&quot;https://jeffe.cs.illinois.edu/open/cycles.html&quot;&gt;Crashing Motorcycles Efficiently&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href=&quot;https://www.wolframcloud.com/objects/demonstrations/MotorcycleGraphs-source.nb&quot;&gt;wolfram&lt;/a&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;https://www.ics.uci.edu/~goodrich/pubs/geomproc.pdf&quot;&gt;Motorcycle Graphs: Canonical Quad Mesh Partitioning&lt;/a&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CGF-2008-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-65-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;oblique placement of seams in the 2D texture space
            &lt;ul&gt;
              &lt;li&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;two sides of the seams are constrained to be matching in parametric space up to an integer translation and rotations by an integer multiple of $\frac{\pi}{2}$&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921143339.png&quot; alt=&quot;20210921143339&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[LFJG17] &lt;strong&gt;seamless cuts&lt;/strong&gt; or &lt;strong&gt;erased seam&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;&lt;strong&gt;no constraint&lt;/strong&gt; is explicitly imposed a priori on uv assignment&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;minimizes the discrepancy from the initial configuration&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;$\underset{\min p}{E_{lerp}(e_i,x_0,x_1)}=\int_0^1&lt;/td&gt;
              &lt;td&gt;B(e_i(\gamma), p)-(\gamma x_0+(1-\gamma)x_1)&lt;/td&gt;
              &lt;td&gt;^2d\gamma$&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;minor technical note, making seams invisible (with any method) may require using texture resolutions that are &lt;strong&gt;powers of 2&lt;/strong&gt;, seams can &lt;strong&gt;still be visible&lt;/strong&gt; when using &lt;strong&gt;arbitrary texture resolutions&lt;/strong&gt;&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;seamless-toroidalcylindrical-textures&quot;&gt;Seamless Toroidal/Cylindrical Textures&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ignore the restriction for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;only allows seams at mesh edges&lt;/code&gt; when Toroidal/Cylindrical [Tar12] 💩
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921152148.png&quot; alt=&quot;20210921152148&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;Cylindrical -&amp;gt; rectangular&lt;/li&gt;
      &lt;li&gt;Toroidal -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;two orthogonal&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;seamless-texture-atlases&quot;&gt;Seamless Texture Atlases&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;[PCK04]Mip-mapping: Texture resolutions may be selected or
blended on a per-fragment basis&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;ul&gt;
      &lt;li&gt;Mip: multum in parvo,[放置很多东西的小空间]&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mipmap&quot;&gt;Mipmap - wiki&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://paroj.github.io/gltut/Texturing/Tut15%20Magnification.html&quot;&gt;Paroj - Linear Filtering&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921163401.png&quot; alt=&quot;20210921163401&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921161916.png&quot; alt=&quot;20210921161916&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921161952.png&quot; alt=&quot;20210921161952&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921162041.png&quot; alt=&quot;20210921162041&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;connectivity-based-representations&quot;&gt;Connectivity-based Representations&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[BL08] Ptex, Disney Animation and Pixar studios
    &lt;ul&gt;
      &lt;li&gt;How to
        &lt;ul&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;Since each face effectively gets its own texture, it is not affected by geometrical deformations of the model.&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;Ptex stores &lt;strong&gt;four face indices per face&lt;/strong&gt;, indicating the four neighbors of each quad face&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;our edge indices are stored per face to represent which edge of each neighboring face is the shared edge&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;resolution adjusted
        &lt;ul&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;texture resolution of each face can be adjusted independently&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;setting the texture resolution of a face based on its size.&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;texture filtering near edges becomes &lt;strong&gt;difficult&lt;/strong&gt;&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[YKH10] Mesh colors
    &lt;ul&gt;
      &lt;li&gt;Indeed, the lowest-resolution mesh colors are vertex colors, &lt;strong&gt;which store a single texture value per vertex&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921170909.png&quot; alt=&quot;20210921170909&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[Yuk16] Mesh Color Textures
    &lt;ul&gt;
      &lt;li&gt;GPU-friendly&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921171800.png&quot; alt=&quot;20210921171800&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sparse-volumetric-representations&quot;&gt;Sparse Volumetric Representations&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;store &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texture data&lt;/code&gt; in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;voxel&lt;/code&gt; grid covering the object&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Issue list
    &lt;ol&gt;
      &lt;li&gt;thin surfaces get the same color on both sides
        &lt;ul&gt;
          &lt;li&gt;can be alleviated by storing normals alongside colors [BD02], at the expense of a further increase in storage and lookup cost&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;cost of trilinear interpolation.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;[KE02] Adaptive Texture Maps
    &lt;ul&gt;
      &lt;li&gt;With traditional texture mapping, the entire texture is encoded using the same resolution, thus wasting memory where the content has low frequency.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921180729.png&quot; alt=&quot;20210921180729&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[BD02,DGPR02, LHN05,KLS05] Octree Textures
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921180814.png&quot; alt=&quot;20210921180814&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[CB04] Brick Maps
    &lt;ul&gt;
      &lt;li&gt;RenderMan&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921181538.png&quot; alt=&quot;20210921181538&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[LH06]Perfect Spatial Hashing
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;This results in a very efficient method where the sparse data is accessed through only two texture lookups (a single indirection). However, the loss of cache coherency, due to the randomization of the access by the hash, penalizes access performance.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921181648.png&quot; alt=&quot;20210921181648&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;volume-based-parametrizations&quot;&gt;Volume-based Parametrizations&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;how to encode the mapping efficiently and how to precompute it robustly&lt;/li&gt;
  &lt;li&gt;[LD07]TileTrees
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921182759.png&quot; alt=&quot;20210921182759&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;The entire process is automatic, robust, and fast&lt;/li&gt;
      &lt;li&gt;Tiletrees suffer from the same &lt;strong&gt;distortions&lt;/strong&gt; as cube-maps&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[THCM04]PolyCube - Maps
    &lt;ul&gt;
      &lt;li&gt;extension of cube-maps[Gre86]&lt;/li&gt;
      &lt;li&gt;by substituting the cube the with an arbitrary polycube&lt;/li&gt;
      &lt;li&gt;they replace the problem of defining a uv mapping with the problem of constructing a polycube&lt;/li&gt;
      &lt;li&gt;The task of automatically or semi-automatically constructing a polycube-map
        &lt;ul&gt;
          &lt;li&gt;[LJFW08,WJH&lt;em&gt;08, HWFQ09, WYZ&lt;/em&gt;11, YZWL14, HJS*14, HZ16]
            &lt;ul&gt;
              &lt;li&gt;limiting the number of cubes&lt;/li&gt;
              &lt;li&gt;limiting the number of irregular vertices&lt;/li&gt;
              &lt;li&gt;matching the topology of the input surface&lt;/li&gt;
              &lt;li&gt;maximizing shape similarity between the two shapes&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921185711.png&quot; alt=&quot;20210921185711&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[Tar16]Volume-Encoded UV-Maps
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;volume-encoded uv-maps replace the problem of defining a uv mapping with the problem of defining a volume-encoded parameterization&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921185835.png&quot; alt=&quot;20210921185835&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921190203.png&quot; alt=&quot;20210921190203&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Rethinking Texture Mapping - State of The Art Report</summary></entry><entry><title type="html">Texture Paper Reading Todo</title><link href="https://ucas.io/Texture-Paper-Reading-TODO/" rel="alternate" type="text/html" title="Texture Paper Reading Todo" /><published>2021-09-20T00:00:00+08:00</published><updated>2021-09-20T00:00:00+08:00</updated><id>https://ucas.io/Texture-Paper-Reading-TODO</id><content type="html" xml:base="https://ucas.io/Texture-Paper-Reading-TODO/"></content><author><name>麦丽素</name></author><summary type="html"></summary></entry><entry><title type="html">Texture for smooth 2</title><link href="https://ucas.io/3d/Texture-for-smooth2/" rel="alternate" type="text/html" title="Texture for smooth 2" /><published>2021-09-18T23:18:09+08:00</published><updated>2021-09-18T23:18:09+08:00</updated><id>https://ucas.io/3d/Texture-for-smooth2</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-smooth2/">&lt;h2 id=&quot;more-smooth-case&quot;&gt;More Smooth case&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;obj&lt;/th&gt;
      &lt;th&gt;image&lt;/th&gt;
      &lt;th&gt;ot&lt;/th&gt;
      &lt;th&gt;mr&lt;/th&gt;
      &lt;th&gt;csr&lt;/th&gt;
      &lt;th&gt;gsl&lt;/th&gt;
      &lt;th&gt;lsl&lt;/th&gt;
      &lt;th&gt;ec&lt;/th&gt;
      &lt;th&gt;result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;12w-5w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;mapple_gussian-0.1_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-5w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-8w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-3k&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-5w&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-8w&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-12w&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;texture-result&quot;&gt;Texture Result&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;kind&lt;/th&gt;
      &lt;th&gt;sm-remesh-3k&lt;/th&gt;
      &lt;th&gt;sm-remesh-5w&lt;/th&gt;
      &lt;th&gt;sm-remesh-8w&lt;/th&gt;
      &lt;th&gt;sm-remesh-12w&lt;/th&gt;
      &lt;th&gt;no-remesh-12w&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234813.png&quot; alt=&quot;20210918234813&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234735.png&quot; alt=&quot;20210918234735&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234647.png&quot; alt=&quot;20210918234647&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234540.png&quot; alt=&quot;20210918234540&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234052.png&quot; alt=&quot;20210918234052&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234946.png&quot; alt=&quot;20210918234946&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235040.png&quot; alt=&quot;20210918235040&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235116.png&quot; alt=&quot;20210918235116&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235327.png&quot; alt=&quot;20210918235327&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;gussian-noise&quot;&gt;Gussian noise&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235542.png&quot; alt=&quot;20210918235542&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;remapping-texture&quot;&gt;ReMapping Texture&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235717.png&quot; alt=&quot;20210918235717&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;faces_F3_T2F_V3F&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mesh_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;materials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uint8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faces_F3_T2F_V3F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;int64&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillPoly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 水平翻转
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hstack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">More Smooth case</summary></entry><entry><title type="html">Texture for smooth</title><link href="https://ucas.io/3d/Texture-for-smooth/" rel="alternate" type="text/html" title="Texture for smooth" /><published>2021-09-17T16:40:14+08:00</published><updated>2021-09-17T16:40:14+08:00</updated><id>https://ucas.io/3d/Texture-for-smooth</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-smooth/">&lt;h3 id=&quot;run-data-set&quot;&gt;Run Data set&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;obj&lt;/th&gt;
      &lt;th&gt;image&lt;/th&gt;
      &lt;th&gt;ot&lt;/th&gt;
      &lt;th&gt;mr&lt;/th&gt;
      &lt;th&gt;csr&lt;/th&gt;
      &lt;th&gt;gsl&lt;/th&gt;
      &lt;th&gt;lsl&lt;/th&gt;
      &lt;th&gt;ec&lt;/th&gt;
      &lt;th&gt;result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;meshlab_lap-smooth_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;meshlab_HC-lap-smooth_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;meshlab_normal-smooth_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210917164323.png&quot; alt=&quot;20210917164323&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210917164348.png&quot; alt=&quot;20210917164348&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210917172233.png&quot; alt=&quot;20210917172233&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Same with 1&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;explaination&quot;&gt;Explaination&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;For case 4: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sommth Face Normals&lt;/code&gt; will not affect the vertex position, but affect the normal of vertex, names &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vn&lt;/code&gt; at obj file. And &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Texeture&lt;/code&gt; does not use that var for compute
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img8cf60c1524815e43726c146fc77d0cf.png&quot; alt=&quot;8cf60c1524815e43726c146fc77d0cf&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img4be3fdda52f0a00e95c494bbaf9b36e.png&quot; alt=&quot;4be3fdda52f0a00e95c494bbaf9b36e&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;obj-format&quot;&gt;Obj Format&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.cmu.edu/~mbz/personal/graphics/obj.html&quot;&gt;cmu&lt;/a&gt;
    &lt;blockquote&gt;
      &lt;p&gt;The vertex normal command specifies a normal vector. A lot of times these aren’t used, because the ‘f’ face command will use the order the ‘v’ commands are given to determine the normal instead. Like the ‘vt’ commands, they don’t mean anything until grouped with a vertex in the ‘f’ face command.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Lap-Smooth
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://diglib.eg.org/handle/10.2312/egst.20051044.053-070&quot;&gt;doi:10.2312/egst.20051044&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/EG_STARs-2005-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-232-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HC-Lap-Smooth
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.00334&quot;&gt;Improved laplacian smoothing of noisy surface meshes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.00334&quot;&gt;doi:10.1111/1467-8659.00334&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CG-1999-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-574-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Run Data set</summary></entry><entry><title type="html">Texture for color lion</title><link href="https://ucas.io/3d/Texture-for-color-lion/" rel="alternate" type="text/html" title="Texture for color lion" /><published>2021-09-16T21:46:52+08:00</published><updated>2021-09-16T21:46:52+08:00</updated><id>https://ucas.io/3d/Texture-for-color-lion</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-color-lion/">&lt;h2 id=&quot;texture-for-colorful-lion&quot;&gt;Texture for colorful lion&lt;/h2&gt;

&lt;h3 id=&quot;params-list-and-annotation&quot;&gt;Params List and annotation&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;params&lt;/th&gt;
      &lt;th&gt;st&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;decimate&lt;/td&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;decimation factor in range [0..1] to be applied to the input surface before refinement (0 - auto, 1 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;close-holes&lt;/td&gt;
      &lt;td&gt;ch&lt;/td&gt;
      &lt;td&gt;try to close small holes in the input surface (0 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;resolution-level&lt;/td&gt;
      &lt;td&gt;rl&lt;/td&gt;
      &lt;td&gt;how many times to scale down the images before mesh refinement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;min-resolution&lt;/td&gt;
      &lt;td&gt;mr&lt;/td&gt;
      &lt;td&gt;do not scale images lower than this resolution&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;outlier-threshold&lt;/td&gt;
      &lt;td&gt;oh&lt;/td&gt;
      &lt;td&gt;threshold used to find and remove outlier face textures (0 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cost-smoothness-ratio&lt;/td&gt;
      &lt;td&gt;csr&lt;/td&gt;
      &lt;td&gt;ratio used to adjust the preference for more compact patches (1 - best quality/worst compactness, ~0 - worst quality/best compactness)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;global-seam-leveling&lt;/td&gt;
      &lt;td&gt;gsl&lt;/td&gt;
      &lt;td&gt;generate uniform texture patches using global seam leveling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;local-seam-leveling&lt;/td&gt;
      &lt;td&gt;lsl&lt;/td&gt;
      &lt;td&gt;generate uniform texture patch borders using local seam leveling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;texture-size-multiple&lt;/td&gt;
      &lt;td&gt;tsm&lt;/td&gt;
      &lt;td&gt;texture size should be a multiple of this value (0 - power of two)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;patch-packing-heuristic&lt;/td&gt;
      &lt;td&gt;pph&lt;/td&gt;
      &lt;td&gt;specify the heuristic used when deciding where to place a new patch (0 - best fit, 3 - good speed, 100 - best speed)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;empty-color&lt;/td&gt;
      &lt;td&gt;ec&lt;/td&gt;
      &lt;td&gt;color used for faces not covered by any image&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;orthographic-image-resolution&lt;/td&gt;
      &lt;td&gt;oir&lt;/td&gt;
      &lt;td&gt;orthographic image resolution to be generated from the textured mesh - the mesh is expected to be already geo-referenced or at least properly oriented (0 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;run-data-set&quot;&gt;Run Data set&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;obj&lt;/th&gt;
      &lt;th&gt;image&lt;/th&gt;
      &lt;th&gt;ot&lt;/th&gt;
      &lt;th&gt;mr&lt;/th&gt;
      &lt;th&gt;csr&lt;/th&gt;
      &lt;th&gt;gsl&lt;/th&gt;
      &lt;th&gt;lsl&lt;/th&gt;
      &lt;th&gt;ec&lt;/th&gt;
      &lt;th&gt;result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;12w-5w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;🍺&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;12w-5w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;🍺&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916222654.png&quot; alt=&quot;20210916222436&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224127.png&quot; alt=&quot;20210916224127&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224422.png&quot; alt=&quot;20210916224422&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224300.png&quot; alt=&quot;20210916224300&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224507.png&quot; alt=&quot;20210916224507&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224640.png&quot; alt=&quot;20210916224552&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224838.png&quot; alt=&quot;20210916224838&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;problem-list&quot;&gt;Problem List&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Pure color as Image&lt;/li&gt;
  &lt;li&gt;Image color of view generated by hsv palette&lt;/li&gt;
  &lt;li&gt;therefor the color of adjacent patch should be very approach&lt;/li&gt;
  &lt;li&gt;mapple remesh to 5W from 12W
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916231821.png&quot; alt=&quot;20210916231821&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;original 12W
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232023.png&quot; alt=&quot;20210916232023&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;As you can see, there are many wrong selected view at the back of lion
    &lt;ul&gt;
      &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blue mesh&lt;/code&gt; comes from a view from the bottom
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232251.png&quot; alt=&quot;20210916232251&quot; height=&quot;100px&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232317.png&quot; alt=&quot;20210916232317&quot; height=&quot;100px&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;red and purple&lt;/code&gt; mesh come from left, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orange&lt;/code&gt; mesh comes from right
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232524.png&quot; alt=&quot;20210916232524&quot; height=&quot;100px&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232825.png&quot; alt=&quot;20210916232825&quot; height=&quot;100px&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Therefor, those bad choices can be sure that it caused by the &lt;strong&gt;normal-vector error&lt;/strong&gt; when build mesh sureface&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Texture for colorful lion</summary></entry><entry><title type="html">Install Cpp jupyter kernel, Image Guied Filter</title><link href="https://ucas.io/tutorial/3d/Install-Cpp-jupyter-kernel/" rel="alternate" type="text/html" title="Install Cpp jupyter kernel, Image Guied Filter" /><published>2021-09-14T15:43:34+08:00</published><updated>2021-09-14T15:43:34+08:00</updated><id>https://ucas.io/tutorial/3d/Install-Cpp-jupyter-kernel</id><content type="html" xml:base="https://ucas.io/tutorial/3d/Install-Cpp-jupyter-kernel/">&lt;h2 id=&quot;install-cpp-kernel&quot;&gt;Install Cpp kernel&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/82025119&quot;&gt;jupyter notebook 安装 C/C++ kernel - KEN的文章 - 知乎&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conda install xeus-cling -c conda-forge&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;after install
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jupyter kernelspec list&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;fix &lt;a href=&quot;https://stackoverflow.com/questions/68261254/conda-error-sysconfigdata-x86-64-conda-linux-gnu&quot;&gt;&lt;strong&gt;issue&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;by&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /opt/anaconda3/envs/gpu/lib/python3.8/_sysconfigdata_x86_64_conda_cos6_linux_gnu.py /opt/anaconda3/envs/gpu/lib/python3.8/_sysconfigdata_x86_64_conda_linux_gnu.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;check installation&lt;/p&gt;

        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;python3    /opt/anaconda3/envs/gpu/share/jupyter/kernels/python3
xcpp11     /opt/anaconda3/envs/gpu/share/jupyter/kernels/xcpp11
xcpp14     /opt/anaconda3/envs/gpu/share/jupyter/kernels/xcpp14
xcpp17     /opt/anaconda3/envs/gpu/share/jupyter/kernels/xcpp17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guided-image-filtering&quot;&gt;&lt;a href=&quot;http://kaiminghe.com/eccv10/&quot;&gt;Guided Image Filtering&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ECCV-2010-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/TPAMI-2013-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-3985-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://kaiminghe.com/eccv10/eccv10ppt.pdf&quot;&gt;PPT eccv 2010&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.cs.jhu.edu/~misha/Fall07/Papers/Perez03.pdf&quot;&gt;Paper.pdf - Microsoft Research&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;image-filtering&quot;&gt;Image Filtering&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Explicit LTI [linear translation-invariant, Linear time-invariant]&lt;/li&gt;
  &lt;li&gt;Explicit Weighted-Average Filters
    &lt;ul&gt;
      &lt;li&gt;Gaussian filter&lt;/li&gt;
      &lt;li&gt;Laplacian filter&lt;/li&gt;
      &lt;li&gt;Sobel filter&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;the process of solving a Poisson Equation
    &lt;ul&gt;
      &lt;li&gt;HDR compression[high dynamic range][4]&lt;/li&gt;
      &lt;li&gt;image stitching[5]&lt;/li&gt;
      &lt;li&gt;image matting[6]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;related&quot;&gt;Related&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Explicit Weighted-Average Filters
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9B%99%E9%82%8A%E6%BF%BE%E6%B3%A2%E5%99%A8&quot;&gt;Bilateral Filter&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;距离参数*差异参数，作为权重&lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;The bilateral filter computes the filter output at a pixel as a weighted average of neighboring pixels&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;看起来像是二阶过滤？&lt;/li&gt;
          &lt;li&gt;time cost
            &lt;ul&gt;
              &lt;li&gt;brute-force, $O(Nr^2)$&lt;/li&gt;
              &lt;li&gt;[15,16], $O(N)$&lt;/li&gt;
              &lt;li&gt;[17]Adams et al. color image&lt;/li&gt;
              &lt;li&gt;$r$: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kernel radius&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;All the abovemethods require a high quantization degree to achieve satisfactory speed, but at the expense of quality degradation&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;problem
            &lt;ul&gt;
              &lt;li&gt;gradient reversal&lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210915133213.png&quot; alt=&quot;20210915133213&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Optimization-based Image Filtering
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;generate high quality results, solving the corresponding linear system is time-consuming.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Nonaverage Filters, 非均质滤波, 非线性滤波
    &lt;ul&gt;
      &lt;li&gt;中值滤波&lt;/li&gt;
      &lt;li&gt;Total-Variation filter&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Guided Filter
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210915133254.png&quot; alt=&quot;20210915133254&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210915133324.png&quot; alt=&quot;20210915133324&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210915133339.png&quot; alt=&quot;20210915133339&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;term
        &lt;ul&gt;
          &lt;li&gt;$q$: output Image&lt;/li&gt;
          &lt;li&gt;$p$: input Image&lt;/li&gt;
          &lt;li&gt;$I$: guide Image&lt;/li&gt;
          &lt;li&gt;$w$: window&lt;/li&gt;
          &lt;li&gt;$k$: the k_th windows&lt;/li&gt;
          &lt;li&gt;$a,b$: linear model params&lt;/li&gt;
          &lt;li&gt;$n$: noise or texture information&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;principle
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
      q_i &amp;= a_kI_i + b_k, \forall i \in w_k&amp;(1)\\
      q_i &amp; = p_i - n_i&amp;(2)\\
      E(a_k,b_k) &amp;=\sum_{i\in w_k}\big((a_k I_i + b_k - p_i)^2\big)+\epsilon a_k^2&amp;(3)\\
      a_k&amp;=\frac{\frac{1}{\vert w\vert}\sum_{i \in w_k }I_i p_i - \mu_k\bar{p_k}}{\sigma_k^2+\epsilon}&amp;(4)\\
      b_k&amp;=\bar{p_k}-a_k\mu_k&amp;(5)\\
      q_i&amp;=\frac{1}{\vert w\vert}\sum_{i \in w_k }a_k I_i+b_k&amp;(6)\\
  \end{aligned}
$$&lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;其中
            &lt;ul&gt;
              &lt;li&gt;$(1)$: 期望的引导图和输入图的线性关系&lt;/li&gt;
              &lt;li&gt;$(2)$: 输入和输出之间差一个噪声或纹理&lt;/li&gt;
              &lt;li&gt;$(3)$: &lt;strong&gt;领回归&lt;/strong&gt;计算$a,b$的值&lt;/li&gt;
              &lt;li&gt;$(4,5,6)$: 参数和输出图片计算&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;evaluation
        &lt;ul&gt;
          &lt;li&gt;PSNR [Peak signal-to-noise ratio]
            &lt;ul&gt;
              &lt;li&gt;
                &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
    PSNR&amp;=10\log_{10}\frac{MAX_I^2}{MSE}\\
    &amp;=20\log_{10}\frac{MAX_I}{\sqrt{MSE}}\\
    &amp;=20\log_{10}MAX_I-10\log_{10}{MSE}\\
\end{aligned}
$$&lt;/div&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;mylikes
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916140309.png&quot; alt=&quot;20210916140309&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;cat guide filter
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916152038.png&quot; alt=&quot;20210916152038&quot; /&gt;4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;cat bi filter
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916152131.png&quot; alt=&quot;20210916152131&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/imgcat_bf.gif&quot; alt=&quot;cat_bf&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;guider_filter_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COLOR_BGR2RGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;guided&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tqdm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cartesian_product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;r:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;_e:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;guided&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guidedFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;guided&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;facet_col_wrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;facet_col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_xaxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;showticklabels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_yaxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;showticklabels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;autosize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;720&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;720&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;autoexpand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/edogawachia/article/details/78872932&quot;&gt;导向滤波原理（Guided Filter）- CSDN - [江户川柯壮]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43194305/article/details/88959183&quot;&gt;导向滤波(Guided Filter)公式详解 - CSDN - [lsflll]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="tutorial" /><category term="3d" /><summary type="html">Install Cpp kernel</summary></entry><entry><title type="html">Possion Image Edit</title><link href="https://ucas.io/3d/Possion-Image-Edit/" rel="alternate" type="text/html" title="Possion Image Edit" /><published>2021-09-10T15:43:34+08:00</published><updated>2021-09-10T15:43:34+08:00</updated><id>https://ucas.io/3d/Possion-Image-Edit</id><content type="html" xml:base="https://ucas.io/3d/Possion-Image-Edit/">&lt;h2 id=&quot;possion-image-edit&quot;&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/1201775.882269&quot;&gt;Possion Image Edit&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/sig_graph-2003-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-2953-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://graphics.cs.cmu.edu/courses/15-463/2017_fall/lectures/lecture7.pptx&quot;&gt;PPT&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.cs.jhu.edu/~misha/Fall07/Papers/Perez03.pdf&quot;&gt;Paper.pdf - Microsoft Research UK&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;python&quot;&gt;Python&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seamlessClone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;definitions&quot;&gt;Definitions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910131356.png&quot; alt=&quot;20210910131356&quot; /&gt;
    &lt;ul&gt;
      &lt;li&gt;$g$: 原始图像，左图企鹅&lt;/li&gt;
      &lt;li&gt;$f$: 插值函数&lt;/li&gt;
      &lt;li&gt;$f^*$: 目标图像&lt;/li&gt;
      &lt;li&gt;$\Omega$: 目标域&lt;/li&gt;
      &lt;li&gt;$\partial\Omega$: 目标域边缘，边界&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;basic-idea&quot;&gt;Basic idea&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;期望的结果
    &lt;ol&gt;
      &lt;li&gt;填补内容要尽可以平滑&lt;/li&gt;
      &lt;li&gt;填补内容的边界像素值和现有的$S$一致，即要无缝过度&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;变分方程
    &lt;ul&gt;
      &lt;li&gt;$\underset{f}{\min}\iint_\Omega\vert\nabla f\vert^2$ with $f\vert_{\partial\Omega}=f^*\vert_{\partial\Omega}$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;E-L Equation
    &lt;ul&gt;
      &lt;li&gt;$\Delta f=0$ over $\Omega$ with $f\vert_{\partial\Omega}=f^*\vert_{\partial\Omega}$
        &lt;ul&gt;
          &lt;li&gt;$\Delta$: 二阶微分， 散度divergence&lt;/li&gt;
          &lt;li&gt;$f\vert_{\partial\Omega}=f^*\vert_{\partial\Omega}$: Dirichlet  boundary: 给出边界处函数在边界处的实际值.
            &lt;ul&gt;
              &lt;li&gt;Neumann boundary: 给出函数在边界处的二阶导数值&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;guidance-vector-field引导向量场&quot;&gt;guidance vector field[引导向量场]&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;期望的结果
    &lt;ol&gt;
      &lt;li&gt;填补内容的梯度要尽可以与$\mathbf{v}$接近&lt;/li&gt;
      &lt;li&gt;填补内容的边界像素值和现有的$S$一致，即要无缝过度&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;变分方程
    &lt;ul&gt;
      &lt;li&gt;$\underset{f}{\min}\iint_\Omega\vert\nabla f-\mathbf{v}\vert^2$ with $f\vert_{\partial\Omega}=f^*\vert_{\partial\Omega}$
        &lt;ul&gt;
          &lt;li&gt;$\mathbf{v}=\nabla g$&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;E-L Equation
    &lt;ul&gt;
      &lt;li&gt;$\Delta f=div(\mathbf{v})$ over $\Omega$ with $f\vert_{\partial\Omega}=f^*\vert_{\partial\Omega}$
        &lt;ul&gt;
          &lt;li&gt;$\Delta f=\frac{\partial^2f}{\partial x^2} + \frac{\partial^2f}{\partial y^2}$: Laplacian&lt;/li&gt;
          &lt;li&gt;$div(\mathbf{v}) = \frac{\partial u}{\partial x} + \frac{\partial u}{\partial y}=\frac{\partial^2g}{\partial x^2}+\frac{\partial^2g}{\partial y^2} = \Delta g$: Divergence[散度]&lt;/li&gt;
          &lt;li&gt;$\mathbf{v}=\nabla g$: Gradient[梯度]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;discrete-algorithm&quot;&gt;discrete algorithm&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910144107.png&quot; alt=&quot;20210910144107&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910144310.png&quot; alt=&quot;20210910144310&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;算法变种&quot;&gt;算法变种&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Seamless Cloning[无缝克隆]， 泊松编辑
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910152017.png&quot; alt=&quot;20210910152017&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Mixing Gradients Seamless Cloning
    &lt;ul&gt;
      &lt;li&gt;for all $x\in \Omega , \mathbf{v(x)}=\begin{cases}\nabla f^&lt;em&gt;(\mathbf{x})&amp;amp;\vert\nabla f^&lt;/em&gt;(\mathbf{x})\vert\gt\vert\nabla g(\mathbf{x})\vert&lt;br /&gt;
\nabla g(\mathbf{x})&amp;amp;otherwise\end{cases}$&lt;/li&gt;
      &lt;li&gt;Seamless Cloning
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910152937.png&quot; alt=&quot;20210910152937&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Mixing Gradients Seamless Cloning
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910152450.png&quot; alt=&quot;20210910152450&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Texture flattening
        &lt;ul&gt;
          &lt;li&gt;for all $x\in \Omega , \mathbf{v(x)}=M(\mathbf{x})\nabla f^*(\mathbf{x})$&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grad(abs(grad)&amp;lt;0.08)=0;&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910153207.png&quot; alt=&quot;20210910153207&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grad(abs(grad)&amp;lt;0.02)=0;&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910153236.png&quot; alt=&quot;20210910153236&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Local illumination changes
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/566570.566573&quot;&gt;Gradient Domain High Dynamic Range Compression&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/sig_graph-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-1753-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910153754.png&quot; alt=&quot;20210910153754&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Local color changes
        &lt;ul&gt;
          &lt;li&gt;Using three channel&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910153824.png&quot; alt=&quot;20210910153824&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Seamless tiling
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910153904.png&quot; alt=&quot;20210910153904&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;additional-reading&quot;&gt;Additional reading&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://link.springer.com/chapter/10.1007/11744085_5&quot;&gt;Covariant Derivatives and Vision&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/eccv-2006-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-52-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ieeexplore.ieee.org/abstract/document/698633/&quot;&gt;Image editing in the contour domain&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/TPAMI-2006-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-174-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://grail.cs.washington.edu/projects/gradientshop/demos/gs_paper_TOG_2009.pdf&quot;&gt;GradientShop: A Gradient-Domain Optimization Framework for Image and Video Filtering&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2010-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-255-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43194305/article/details/104928378&quot;&gt;泊松图像编辑(Possion Image Edit)原理、实现与应用 - CSDN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/58867397&quot;&gt;泊松图像编辑 - Wang Hawk的文章 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Possion Image Edit</summary></entry><entry><title type="html">Texture Paper Reading</title><link href="https://ucas.io/3d/Texture-Paper-Reading/" rel="alternate" type="text/html" title="Texture Paper Reading" /><published>2021-09-09T16:28:42+08:00</published><updated>2021-09-09T16:28:42+08:00</updated><id>https://ucas.io/3d/Texture-Paper-Reading</id><content type="html" xml:base="https://ucas.io/3d/Texture-Paper-Reading/">&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://link.springer.com/chapter/10.1007/978-3-319-10602-1_54&quot;&gt;Let There Be Color! - Large-Scale Texturing of 3D Reconstructions&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/eccv-2014-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-229-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.gcc.tu-darmstadt.de/media/gcc/papers/Waechter-2014-LTB.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;In this paper we therefore
present the first unified texturing approach that handles large, realistic datasets reconstructed from images with a structure-from-motion plus multi-view stereo pipeline.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;&lt;strong&gt;millions of triangles&lt;/strong&gt; within less &lt;strong&gt;than two hours&lt;/strong&gt;.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;Related
        &lt;ul&gt;
          &lt;li&gt;view selection
            &lt;ul&gt;
              &lt;li&gt;blend multiple views per face[5,13]&lt;/li&gt;
              &lt;li&gt;one view per face[9,10,15,23]&lt;/li&gt;
              &lt;li&gt;one view per texel[19]&lt;/li&gt;
              &lt;li&gt;one view per face but blend close to texture patch borders[2,6]&lt;/li&gt;
              &lt;li&gt;single view per face based on a &lt;strong&gt;pairwise Markov random field&lt;/strong&gt;[15]
                &lt;ul&gt;
                  &lt;li&gt;smoothness term models&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;view blend
                &lt;ul&gt;
                  &lt;li&gt;weight blending[5]
                    &lt;ul&gt;
                      &lt;li&gt;&lt;strong&gt;masks indicating&lt;/strong&gt;&lt;/li&gt;
                      &lt;li&gt;angle to weight&lt;/li&gt;
                      &lt;li&gt;
                        &lt;blockquote&gt;
                          &lt;p&gt;suggest the use of vertex colors in combination
with mesh subdivision&lt;/p&gt;
                        &lt;/blockquote&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;blending in frequency space[2,6]&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;blend pixels based on angle and proximity to the model[13]&lt;/li&gt;
              &lt;li&gt;view-dependent texturing— &lt;strong&gt;Lumigraph&lt;/strong&gt;[4]&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Color Adjustment
            &lt;ul&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210909165327.png&quot; alt=&quot;20210909165327&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;local
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;seam's mean&lt;/code&gt;[23]
                    &lt;ul&gt;
                      &lt;li&gt;heat diffusion&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;global
                &lt;ul&gt;
                  &lt;li&gt;globally optimal luminance correction terms[15]
                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;blockquote&gt;
                          &lt;p&gt;After adjustment luminance differences at seams should be small and the derivative of adjustments within a texture patch should be small&lt;/p&gt;
                        &lt;/blockquote&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Assumptions and Base Method
        &lt;ul&gt;
          &lt;li&gt;Pairwise Markov random field energy formulation[15]&lt;/li&gt;
          &lt;li&gt;
            &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
      E(l)&amp;=\sum_{F_i\in Faces}E_{data}(F_i, l_i)+\sum_{F_i\in Faces}E_{smooth}(F_i, F_j, l_i, l_j)&amp;(1)
  \end{aligned}
$$&lt;/div&gt;
            &lt;ul&gt;
              &lt;li&gt;$l$: labeling of views&lt;/li&gt;
              &lt;li&gt;$F$: mesh face&lt;/li&gt;
              &lt;li&gt;$E_{data}$: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;good&lt;/code&gt; views for texturing a face
                &lt;ol&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;base method: the &lt;strong&gt;angle&lt;/strong&gt; between viewing direction and&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;project a face into a view and use the &lt;strong&gt;projection’s size&lt;/strong&gt; as data term[2]&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;Lumigraph’s view blending weights face normal[4] 💩&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;the gradient magnitude of the image integrated over the face’s projection[9]&lt;/p&gt;
                    &lt;/blockquote&gt;
                    &lt;ul&gt;
                      &lt;li&gt;to solve &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;close-up the faces closest to the camera&lt;/code&gt;  that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;not be in focus&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lead to a blurry texture&lt;/code&gt;.&lt;/li&gt;
                      &lt;li&gt;$x,y \pm64pixel$&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ol&gt;
              &lt;/li&gt;
              &lt;li&gt;$E_{smooth}$: minimizes seam (i.e., edges between faces textured with differentimages) visibility.&lt;/li&gt;
              &lt;li&gt;$E(l)$minimized with graph cuts and alpha expansion[3]&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;This Paper
            &lt;ul&gt;
              &lt;li&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;We found, that computation of the seam error integrals is a computational bottleneck and cannot be precomputed due to the prohibitively large number of combinations. Furthermore, it favors distant or low-resolution views since a blurry texture produces smaller seam errors, an issue that does not occur in their datasets.&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;Add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;additive correction&lt;/code&gt; $g$&lt;/li&gt;
              &lt;li&gt;
                &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
        &amp;\underset{\mathbf{g}}{\argmin}\sum_v \big(f_{v_{left}} + g_{v_{left}} - (f_{v_{right}}+g_{v_{right}})\big)^2 + \frac{1}{\lambda}\sum_{v_i,v_j}(g_{v_i}-g_{v_j})^2&amp;(2)
    \end{aligned}
$$&lt;/div&gt;
                &lt;ul&gt;
                  &lt;li&gt;$v$: vexel&lt;/li&gt;
                  &lt;li&gt;$v_{left}$: vexel at left of seam&lt;/li&gt;
                  &lt;li&gt;$v_{right}$: vexel at left of seam&lt;/li&gt;
                  &lt;li&gt;$v_i,v_j$: vexel at same seam and &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adjacent&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
                  &lt;li&gt;$f_{v*}$: color of vexel&lt;/li&gt;
                  &lt;li&gt;$g$: additive correction&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Large-Scale Texturing Approach
        &lt;ul&gt;
          &lt;li&gt;Preprocessing
            &lt;ul&gt;
              &lt;li&gt;check &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;face visibility&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ColNet&lt;/code&gt;[11]&lt;/li&gt;
              &lt;li&gt;precompute the data terms for Equation $(1)$&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;View Selection
            &lt;ul&gt;
              &lt;li&gt;graph cuts and alpha expansion[3]&lt;/li&gt;
              &lt;li&gt;replace[9] the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data term&lt;/code&gt; to
                &lt;ul&gt;
                  &lt;li&gt;$E_{data} = -\int_{\phi(F_i,l_i)}\Vert\nabla(I_{l_i}(p))\Vert_2dp$💩
                    &lt;ul&gt;
                      &lt;li&gt;$F_i$: face&lt;/li&gt;
                      &lt;li&gt;$\phi(F_i,l_i)$: $F_i$’s projection&lt;/li&gt;
                      &lt;li&gt;$I_{l_i}$: Sobel operator&lt;/li&gt;
                      &lt;li&gt;$\Vert\nabla(I_{l_i})\Vert_2$: gradient magnitude&lt;/li&gt;
                      &lt;li&gt;大概意思就是，面投影到图片，计算投影区的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sobel operator&lt;/code&gt;, 如果投影区太小没有像素，就&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gradient magnitude at the projection's centroid and multiply it with the projection area.&lt;/code&gt;, 最后把它们加一块&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;有行人的图梯度容易很大
                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;blockquote&gt;
                          &lt;p&gt;introduce an additional step to ensure photo-consistency of the texture.&lt;/p&gt;
                        &lt;/blockquote&gt;
                      &lt;/li&gt;
                      &lt;li&gt;assuming
                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;blockquote&gt;
                              &lt;p&gt;the majority of views see the correct color.&lt;/p&gt;
                            &lt;/blockquote&gt;
                          &lt;/li&gt;
                          &lt;li&gt;
                            &lt;blockquote&gt;
                              &lt;p&gt;A minority may see wrong colors&lt;/p&gt;
                            &lt;/blockquote&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;reject inconsistent views
                        &lt;ul&gt;
                          &lt;li&gt;mean[19]&lt;/li&gt;
                          &lt;li&gt;median[13]&lt;/li&gt;
                          &lt;li&gt;mean-shift algorithm[this]
                            &lt;ol&gt;
                              &lt;li&gt;Compute the face projection’s mean color $c_i$ for each view $i$ in which the face is visible.&lt;/li&gt;
                              &lt;li&gt;Declare all views seeing the face as inliers.&lt;/li&gt;
                              &lt;li&gt;Compute mean $\mu$ and covariance matrix $\Sigma$ of all inliers’ mean color $c_i$.&lt;/li&gt;
                              &lt;li&gt;Evaluate a multi-variate Gaussian function $exp(-\frac{1}{2}(c_i-\mu)^T\Sigma^{-1}(c_i-\mu))$ each view in which the face is visible.&lt;/li&gt;
                              &lt;li&gt;Clear the inlier list and insert all views whose function value is above a threshold $6E-3$ as default&lt;/li&gt;
                              &lt;li&gt;Repeat 3.-5. for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10&lt;/code&gt; iterations or until all entries of $\Sigma$ drop below $10E-5$, the inversion of $\Sigma$ becomes unstable, or the number of inliers drops below 4&lt;/li&gt;
                            &lt;/ol&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;replace the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Smoothness Term&lt;/code&gt;
                        &lt;ul&gt;
                          &lt;li&gt;based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Potts&lt;/code&gt; model&lt;/li&gt;
                          &lt;li&gt;$E_{smooth} = [l_i\neq l_j]$💩
                            &lt;ul&gt;
                              &lt;li&gt;$[\cdot]$: is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Iverson bracket&lt;/code&gt;, 满足条件就是1，不满足就是0.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Color Adjustment
            &lt;ul&gt;
              &lt;li&gt;local adjustment with Poisson editing[16]
                &lt;ul&gt;
                  &lt;li&gt;why?&lt;/li&gt;
                  &lt;li&gt;global adjustment[15] problem&lt;/li&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;the vertex v’s projection into the two images adjacent to the seam. If there are even &lt;strong&gt;small registration errors&lt;/strong&gt; (which there always are), &lt;strong&gt;both projections do not correspond to exactly the same spot on the real object&lt;/strong&gt;. Also, if both images have a &lt;strong&gt;different scale&lt;/strong&gt; the looked up pixels span a different footprint in 3D. This may be &lt;strong&gt;irrelevant in controlled lab&lt;/strong&gt; datasets, but in realistic multi-view stereo datasets the lookups from effectively different points or footprints mislead the &lt;strong&gt;global adjustment&lt;/strong&gt; and &lt;strong&gt;produce artifacts&lt;/strong&gt;.&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Color Lookup Support Region
                &lt;ul&gt;
                  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910011941.png&quot; alt=&quot;20210910011941&quot; /&gt;&lt;/li&gt;
                  &lt;li&gt;$v_1$点的颜色等于两条边的颜色*距离权重&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;Equation 2 matrix form&lt;/strong&gt;&lt;/li&gt;
                  &lt;li&gt;
                    &lt;div class=&quot;kdmath&quot;&gt;$$
\mathbf{\Vert Ag-f\Vert_2^2+\Vert\Gamma g\Vert_2^2=g^T(A^TA+\Gamma^T\Gamma)g-f^TAg+f^Tf}
$$&lt;/div&gt;
                    &lt;ul&gt;
                      &lt;li&gt;$\mathbf{f}$: vector, stacked $f_{v_{left}} - f_{v_{right}}$&lt;/li&gt;
                      &lt;li&gt;$\mathbf{A}$: sparse matrix with $\pm 1$&lt;/li&gt;
                      &lt;li&gt;$\mathbf{\Gamma}$: sparse matrix with $\pm 1$&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;minimize it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conjugate gradient&lt;/code&gt; when $\frac{\Vert r\Vert_2}{\Vert\mathbf{A^Tf}\Vert_2}&amp;lt;10^{-5}$
                    &lt;ul&gt;
                      &lt;li&gt;$r$: the residual&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Poisson Editing
            &lt;ul&gt;
              &lt;li&gt;Have a look at &lt;a href=&quot;https://ucas.io/3d/Possion-Image-Edit/&quot;&gt;UCAS.IO/Possion-Image-Edit&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;seams adjustment
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;perform local Poisson image editing[9, 16]&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;Poisson editing of a patch to a 20 pixel wide border strip[this]&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910163143.png&quot; alt=&quot;20210910163143&quot; height=&quot;100px&quot; /&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Evaluation
        &lt;ul&gt;
          &lt;li&gt;Data Term and Photo-Consistency Check
            &lt;ul&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910171331.png&quot; alt=&quot;20210910171331&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910171511.png&quot; alt=&quot;20210910171511&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Smoothness Term
            &lt;ul&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910171606.png&quot; alt=&quot;20210910171606&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Color Adjustment
            &lt;ul&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910172145.png&quot; alt=&quot;20210910172145&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210910172445.png&quot; alt=&quot;20210910172445&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Let There Be Color! - Large-Scale Texturing of 3D Reconstructions Paper.pdf In this paper we therefore present the first unified texturing approach that handles large, realistic datasets reconstructed from images with a structure-from-motion plus multi-view stereo pipeline. millions of triangles within less than two hours. Related view selection blend multiple views per face[5,13] one view per face[9,10,15,23] one view per texel[19] one view per face but blend close to texture patch borders[2,6] single view per face based on a pairwise Markov random field[15] smoothness term models view blend weight blending[5] masks indicating angle to weight suggest the use of vertex colors in combination with mesh subdivision blending in frequency space[2,6] blend pixels based on angle and proximity to the model[13] view-dependent texturing— Lumigraph[4] Color Adjustment local seam's mean[23] heat diffusion global globally optimal luminance correction terms[15] After adjustment luminance differences at seams should be small and the derivative of adjustments within a texture patch should be small Assumptions and Base Method Pairwise Markov random field energy formulation[15] $$ \begin{aligned} E(l)&amp;=\sum_{F_i\in Faces}E_{data}(F_i, l_i)+\sum_{F_i\in Faces}E_{smooth}(F_i, F_j, l_i, l_j)&amp;(1) \end{aligned} $$ $l$: labeling of views $F$: mesh face $E_{data}$: good views for texturing a face base method: the angle between viewing direction and project a face into a view and use the projection’s size as data term[2] Lumigraph’s view blending weights face normal[4] 💩 the gradient magnitude of the image integrated over the face’s projection[9] to solve close-up the faces closest to the camera that not be in focus and lead to a blurry texture. $x,y \pm64pixel$ $E_{smooth}$: minimizes seam (i.e., edges between faces textured with differentimages) visibility. $E(l)$minimized with graph cuts and alpha expansion[3] This Paper We found, that computation of the seam error integrals is a computational bottleneck and cannot be precomputed due to the prohibitively large number of combinations. Furthermore, it favors distant or low-resolution views since a blurry texture produces smaller seam errors, an issue that does not occur in their datasets. Add a additive correction $g$ $$ \begin{aligned} &amp;\underset{\mathbf{g}}{\argmin}\sum_v \big(f_{v_{left}} + g_{v_{left}} - (f_{v_{right}}+g_{v_{right}})\big)^2 + \frac{1}{\lambda}\sum_{v_i,v_j}(g_{v_i}-g_{v_j})^2&amp;(2) \end{aligned} $$ $v$: vexel $v_{left}$: vexel at left of seam $v_{right}$: vexel at left of seam $v_i,v_j$: vexel at same seam and adjacent $f_{v*}$: color of vexel $g$: additive correction Large-Scale Texturing Approach Preprocessing check face visibility by ColNet[11] precompute the data terms for Equation $(1)$ View Selection graph cuts and alpha expansion[3] replace[9] the Data term to $E_{data} = -\int_{\phi(F_i,l_i)}\Vert\nabla(I_{l_i}(p))\Vert_2dp$💩 $F_i$: face $\phi(F_i,l_i)$: $F_i$’s projection $I_{l_i}$: Sobel operator $\Vert\nabla(I_{l_i})\Vert_2$: gradient magnitude 大概意思就是，面投影到图片，计算投影区的Sobel operator, 如果投影区太小没有像素，就gradient magnitude at the projection's centroid and multiply it with the projection area., 最后把它们加一块 有行人的图梯度容易很大 introduce an additional step to ensure photo-consistency of the texture. assuming the majority of views see the correct color. A minority may see wrong colors reject inconsistent views mean[19] median[13] mean-shift algorithm[this] Compute the face projection’s mean color $c_i$ for each view $i$ in which the face is visible. Declare all views seeing the face as inliers. Compute mean $\mu$ and covariance matrix $\Sigma$ of all inliers’ mean color $c_i$. Evaluate a multi-variate Gaussian function $exp(-\frac{1}{2}(c_i-\mu)^T\Sigma^{-1}(c_i-\mu))$ each view in which the face is visible. Clear the inlier list and insert all views whose function value is above a threshold $6E-3$ as default Repeat 3.-5. for 10 iterations or until all entries of $\Sigma$ drop below $10E-5$, the inversion of $\Sigma$ becomes unstable, or the number of inliers drops below 4 replace the Smoothness Term based on the Potts model $E_{smooth} = [l_i\neq l_j]$💩 $[\cdot]$: is the Iverson bracket, 满足条件就是1，不满足就是0. Color Adjustment local adjustment with Poisson editing[16] why? global adjustment[15] problem the vertex v’s projection into the two images adjacent to the seam. If there are even small registration errors (which there always are), both projections do not correspond to exactly the same spot on the real object. Also, if both images have a different scale the looked up pixels span a different footprint in 3D. This may be irrelevant in controlled lab datasets, but in realistic multi-view stereo datasets the lookups from effectively different points or footprints mislead the global adjustment and produce artifacts. Color Lookup Support Region $v_1$点的颜色等于两条边的颜色*距离权重 Equation 2 matrix form $$ \mathbf{\Vert Ag-f\Vert_2^2+\Vert\Gamma g\Vert_2^2=g^T(A^TA+\Gamma^T\Gamma)g-f^TAg+f^Tf} $$ $\mathbf{f}$: vector, stacked $f_{v_{left}} - f_{v_{right}}$ $\mathbf{A}$: sparse matrix with $\pm 1$ $\mathbf{\Gamma}$: sparse matrix with $\pm 1$ minimize it with conjugate gradient when $\frac{\Vert r\Vert_2}{\Vert\mathbf{A^Tf}\Vert_2}&amp;lt;10^{-5}$ $r$: the residual Poisson Editing Have a look at UCAS.IO/Possion-Image-Edit seams adjustment perform local Poisson image editing[9, 16] Poisson editing of a patch to a 20 pixel wide border strip[this] Evaluation Data Term and Photo-Consistency Check Smoothness Term Color Adjustment</summary></entry><entry><title type="html">Texture for dog project</title><link href="https://ucas.io/3d/Texture-for-dog-project/" rel="alternate" type="text/html" title="Texture for dog project" /><published>2021-09-08T16:28:42+08:00</published><updated>2021-09-08T16:28:42+08:00</updated><id>https://ucas.io/3d/Texture-for-dog-project</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-dog-project/">&lt;h2 id=&quot;original-texture&quot;&gt;Original Texture&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908163126.png&quot; alt=&quot;20210908163150&quot; height=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908163150.png&quot; alt=&quot;20210908163150&quot; height=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Some sureface mesh too small be ignored.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;remeshing&quot;&gt;Remeshing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Make mesh to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Equilateral triangle&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;3DScan
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908163552.png&quot; alt=&quot;20210908163552&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Texture after remeshing
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908171531.png&quot; alt=&quot;20210908171531&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Texture after remeshing with invert
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matrix[0:3, 0:3] = np.linalg.inv(matrix[0:3, 0:3])&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908190838.png&quot; alt=&quot;20210908190838&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;相机不动物体动时，相机朝向需要取逆&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;easy-3d&quot;&gt;Easy 3D&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Repository&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;spark&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;star&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://github.com/LiangliangNan/Easy3D&quot;&gt;&lt;img src=&quot;https://github-readme-stats.vercel.app/api/pin/?username=LiangliangNan&amp;amp;repo=Easy3D&amp;amp;show_owner=true&quot; alt=&quot;Readme Card&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://github.com/LiangliangNan/Easy3D&quot;&gt;&lt;img src=&quot;https://stars.medv.io/LiangliangNan/Easy3D.svg&quot; alt=&quot;Sparkline&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://starchart.cc/LiangliangNan/Easy3D&quot;&gt;&lt;img src=&quot;https://starchart.cc/LiangliangNan/Easy3D.svg&quot; width=&quot;200px&quot; /&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;home-page&quot;&gt;&lt;a href=&quot;https://3d.bk.tudelft.nl/liangliang/software/easy3d_doc/html/index.html&quot;&gt;Home Page&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;author&quot;&gt;&lt;a href=&quot;https://3d.bk.tudelft.nl/liangliang/&quot;&gt;Author&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908235043.png&quot; alt=&quot;20210908235043&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908234448.png&quot; alt=&quot;20210908234448&quot; height=&quot;250px&quot; /&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210908234505.png&quot; alt=&quot;20210908234505&quot; height=&quot;250px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-log&quot;&gt; ------------------------------------------------------------------
  F1:                  Help
  F2:                  Toggle animation (if available)
  Ctrl + 'o':          Open file
  Ctrl + 's':          Save file
  Fn + Delete:         Delete current model
  '&amp;lt;' or '&amp;gt;':          Switch between models
  's':                 Snapshot
  'p':                 Toggle perspective/orthographic projection)
  'a':                 Toggle axes
  Ctrl + 'f':          Toggle frame rate
  Left drag:           Rotate the camera
  Right drag:          Move the camera
  'x' + Left drag:     Rotate the camera around horizontal axis
  'x' + Right drag:    Move the camera along horizontal axis
  'y' + Left drag:     Rotate the camera around vertical axis
  'y' + Right drag:    Move the camera along vertical axis
  'o' + Left drag:     Rotate the camera around ortho-screen axis
  Middle or Wheel:     Zoom in/out
  Ctrl + '+'/'-':      Zoom in/out
  Left/Right           Turn camera left/right
  Ctrl + Left/Right:   Move camera left/right
  Up/Down:             Move camera forward/backward
  Ctrl + Up/Down:      Move camera up/down
  Ctrl + 'c':          Copy current view status to clipboard
  Ctrl + 'v':          Restore view status from clipboard
  Alt + 'k':           Add key frame to the camera path
  Alt + 'd':           Delete the camera path
  Ctrl + 'k':          Play the camera path
  Ctrl + 't':          Toggle camera path
  'f':                 Fit screen (all models)
  'c':                 Fit screen (current model only)
  'z' + Left click:    Zoom to target point on model
  'z' + Right click:   Zoom o fit screen
  Shift + Left click:  Define a target point on model
  Shift + Right click: Undefine the target point (if any) on model
  Ctrl + Left drag:    Zoom to fit region
  '-'/'=':             Decrease/Increase point size
  '{'/'}':             Decrease/Increase line width
  'b':                 Toggle borders
  'e':                 Toggle edges
  'v':                 Toggle vertices
  'm':                 Toggle smooth shading (for SurfaceMesh)
  'd':                 Print model info (drawables, properties)
 ------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;mapple-remesh&quot;&gt;Mapple Remesh&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210909002430.png&quot; alt=&quot;20210909002430&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;make-builder-under-linux&quot;&gt;Make Builder under linux&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Ninja vs Makefile&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hamelot.io/programming/make-vs-ninja-performance-comparison/&quot;&gt;make-vs-ninja-performance-comparison&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/d118615c1943&quot;&gt;使用 Ninja 代替 make&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install-nvidia-dirver&quot;&gt;Install Nvidia dirver&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/momo%E7%9A%84%E6%A9%9F%E5%99%A8%E4%BA%BA%E7%95%99%E5%AD%B8%E5%A4%A2/ubuntu-16-04-gpu-setup-for-pytorch-with-conda-d308238b4dc5&quot;&gt;ubuntu-16-04-gpu-setup-for-pytorch-with-conda&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;choose
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://docs.nvidia.com/deploy/cuda-compatibility/index.html#deployment-consideration-forward&quot;&gt;Nvidia driver version with cuda version&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt install nvidia-driver-450&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conda install cudatoolkit&lt;/code&gt; &amp;gt; 11.2.2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;set proxy for conda&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-conda&quot;&gt;proxy_servers:
    http: http://user:pass@corp.com:8080
    https: https://user:pass@corp.com:8080
&lt;/code&gt;&lt;/pre&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Original Texture</summary></entry><entry><title type="html">Texture for original model And Cmake on OpenMVS</title><link href="https://ucas.io/3d/Texture-For-Original-Model/" rel="alternate" type="text/html" title="Texture for original model And Cmake on OpenMVS" /><published>2021-09-07T22:21:17+08:00</published><updated>2021-09-07T22:21:17+08:00</updated><id>https://ucas.io/3d/Texture-For-Original-Model</id><content type="html" xml:base="https://ucas.io/3d/Texture-For-Original-Model/">&lt;h2 id=&quot;texture-at-original-mesh&quot;&gt;Texture at original mesh&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;size&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
      &lt;th&gt;vertices&lt;/th&gt;
      &lt;th&gt;faces&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;mesh-original&lt;/td&gt;
      &lt;td&gt;2.1G&lt;/td&gt;
      &lt;td&gt;Original Block Merge&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mesh-original-building&lt;/td&gt;
      &lt;td&gt;2.1G&lt;/td&gt;
      &lt;td&gt;Building only&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mesh-original-plant&lt;/td&gt;
      &lt;td&gt;429M&lt;/td&gt;
      &lt;td&gt;Plant only&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mesh-original-reduce-50p&lt;/td&gt;
      &lt;td&gt;1.0G&lt;/td&gt;
      &lt;td&gt;maya reduce 50%&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mesh-original-reduce-50p-50p&lt;/td&gt;
      &lt;td&gt;529M&lt;/td&gt;
      &lt;td&gt;maya reduce 25%&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mesh-original-reduce-50p-50p-50p&lt;/td&gt;
      &lt;td&gt;265M&lt;/td&gt;
      &lt;td&gt;maya reduce 12.5%&lt;/td&gt;
      &lt;td&gt;694001&lt;/td&gt;
      &lt;td&gt;1361715&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;case1
    &lt;ul&gt;
      &lt;li&gt;params
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;block[0:4]&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model = mesh-original-reduce-50p-50p-50p&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;cost
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;memory=12G&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;load_image=16m42s&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assigning=33m56s&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generating texture atlas=1h52m15s&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mesh texturing=2h26m13s&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;save=34s&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907221449.png&quot; alt=&quot;20210907221449&quot; height=&quot;200&quot; /&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907221533.png&quot; alt=&quot;20210907221533&quot; height=&quot;200&quot; /&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907221635.png&quot; alt=&quot;20210907221635&quot; height=&quot;200&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907221731.png&quot; alt=&quot;20210907221731&quot; height=&quot;200&quot; /&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907221825.png&quot; alt=&quot;20210907221825&quot; height=&quot;200&quot; /&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907221916.png&quot; alt=&quot;20210907221916&quot; height=&quot;200&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prepare-requirement-of-openmvs&quot;&gt;Prepare Requirement of OpenMVS&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;vcpkg install
    &lt;ul&gt;
      &lt;li&gt;make sure you have specift args &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--triplet x64-windows&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;vcpkg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zlib&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boost-iostreams&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boost-program-options&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boost-system&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boost-serialization&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eigen3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cgal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opencv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;glew&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;glfw3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--triplet&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x64-windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907230631.png&quot; alt=&quot;20210907230631&quot; height=&quot;200&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;build with vs 2019
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210907230743.png&quot; alt=&quot;20210907230743&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Texture at original mesh</summary></entry></feed>