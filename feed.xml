<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://ucas.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ucas.io/" rel="alternate" type="text/html" /><updated>2021-09-28T12:34:29+08:00</updated><id>https://ucas.io/feed.xml</id><title type="html">Notes B</title><subtitle>A place for notes on various topics.</subtitle><author><name>麦丽素</name></author><entry><title type="html">Minimum bounding box [MBB]</title><link href="https://ucas.io/3d/Minimum-bounding-box-MBB/" rel="alternate" type="text/html" title="Minimum bounding box [MBB]" /><published>2021-09-27T14:57:40+08:00</published><updated>2021-09-27T14:57:40+08:00</updated><id>https://ucas.io/3d/Minimum-bounding-box-%5BMBB%5D</id><content type="html" xml:base="https://ucas.io/3d/Minimum-bounding-box-MBB/">&lt;h2 id=&quot;mbb-最小包围盒-minimum-bounding-box&quot;&gt;MBB 最小包围盒 [Minimum bounding box]&lt;/h2&gt;

&lt;h3 id=&quot;aabb-轴对齐包围盒-axis-aligned-minimum-bounding-box&quot;&gt;AABB 轴对齐包围盒 [Axis-aligned minimum bounding box]&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;when the model is rotated they cannot be simply rotated with it, but need to be recomputed.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927212832.png&quot; alt=&quot;20210927212832&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
  P_{min} &amp;= [x_{min},y_{min},z_{min}]\\
  P_{max} &amp;= [x_{max},y_{max},z_{max}]
\end{aligned}
$$&lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;obb-有向围盒-oriented-minimum-bounding-box&quot;&gt;OBB 有向围盒 [Oriented minimum bounding box]&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927215723.png&quot; alt=&quot;20210927215723&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;其中
    &lt;ul&gt;
      &lt;li&gt;$C$: Center Point&lt;/li&gt;
      &lt;li&gt;$\mathbf{u, v, w}$: three unit vectors orthornormal basis&lt;/li&gt;
      &lt;li&gt;$h_u, h_v, h_w$: three scalars representing half the dimension in each directions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Arbitrarily oriented minimum bounding box&lt;/li&gt;
  &lt;li&gt;Object-oriented minimum bounding box&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dop-离散定向多面体-discrete-oriented-polyhedra&quot;&gt;DOP 离散定向多面体 [Discrete Oriented Polyhedra]&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;A k-DOP is the Boolean intersection of extents along k directions. Thus, a k-DOP is the Boolean intersection of k bounding slabs and is a convex polytope containing the object&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;intersection-checks&quot;&gt;Intersection checks&lt;/h2&gt;

&lt;h3 id=&quot;oriented-bounding-box-and-orthogonal-frustum-obb-和-方平截头体-正交平截头体&quot;&gt;Oriented Bounding Box and Orthogonal Frustum [OBB 和 方平截头体, 正交平截头体]&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Orthogonal Frustum, usually is the viewing frustum[视体]
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/0/02/ViewFrustum.svg&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927230250.png&quot; alt=&quot;20210927230250&quot; height=&quot;400px&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The Method of Separating Axes [分离轴定理]
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperplane_separation_theorem&quot;&gt;Hyperplane separation theorem - Wikipidea&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.sevenson.com.au/programming/sat/&quot;&gt;Separating Axis Theorem (SAT) Explanation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/yorhomwang/article/details/54869018&quot;&gt;碰撞检测之分离轴定理算法讲解 - CSDN&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927222129.png&quot; alt=&quot;20210927222129&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;取一条边，做每个点在其法向上的投影，对每个形状取最大值和最小值作为投影范围，判断投影是否相交即可，如果投影不想交，则两个图形必然不想交，否则继续迭代下一个边，如果所有的边都相交，则物体相交&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;本方法只适用于凸多面体&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;difficult problem is selecting a finite set of line directions such that the intersection/nonintersection can be determined by separating axis tests using only vectors in that set&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;ul&gt;
          &lt;li&gt;减少需要迭代的边可以提高运行速度&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;For &lt;strong&gt;convex polyhedra&lt;/strong&gt; it turns out that the set consisting of face normals for the two polyhedra and vectors that are the &lt;strong&gt;cross product of edges&lt;/strong&gt;, one edge from each polyhedron, is sufficient for the intersection testing.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;对于一个多面体$i$，有$F_i, E_i$个面和边，需要检测的直线总量为$F_0+F_1+E_0E_1$&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;It is possible that some of the vectors formed by cross products
of edges are zero, in which case they &lt;strong&gt;do not need to be tested&lt;/strong&gt;&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;ul&gt;
          &lt;li&gt;For &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OBB&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OF&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;OBB: $F=3, E=3$&lt;/li&gt;
              &lt;li&gt;OF: $F=5, E=6$&lt;/li&gt;
              &lt;li&gt;The total number of vectors to test is $26$&lt;/li&gt;
              &lt;li&gt;&lt;strong&gt;Caching Intermediate Results to make an optimized implementation&lt;/strong&gt;&lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927230617.png&quot; alt=&quot;20210927230617&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;For &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AABB&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AABB&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;AABB: $F=3, E=3$&lt;/li&gt;
              &lt;li&gt;The total number of vectors to test is $3+3+3*3=15$&lt;/li&gt;
              &lt;li&gt;The set has only &lt;strong&gt;three nonzero vectors&lt;/strong&gt;.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;For &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OBB&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OBB&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;OBB: $F=3, E=3$&lt;/li&gt;
              &lt;li&gt;Total: $3 + 3+ 3*3=15$&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;平面与包围盒的相交测试&quot;&gt;平面与包围盒的相交测试&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;对角线判定法
    &lt;ul&gt;
      &lt;li&gt;利用了平面与包围盒相交，则它必定与包围盒的一条对角线相交这个性质，所以只要找到那条对角线，把它的两个顶点代入平面的方程中，判断求解的结果的符号即可&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;距离判定法
    &lt;ul&gt;
      &lt;li&gt;是通过对比投影半长与包围盒中心到平面的距离来判定是否相交&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;射线与包围盒的相交测试&quot;&gt;射线与包围盒的相交测试&lt;/h2&gt;

&lt;h2 id=&quot;openmvs距离判定法&quot;&gt;OpenMVS[距离判定法?]&lt;/h2&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Culls AABB to n sided frustum. Normals pointing outwards.
 * -&amp;gt; IN:  AABB    - bounding box to be tested
 *    OUT: VISIBLE - aabb totally inside frustum
 *         CLIPPED - aabb clipped by frustum
 *         CULLED  - aabb totally outside frustum
 */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GCLASS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TFrustum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Classify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AABB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bIntersects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// find and test extreme points&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIMS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PLANE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_planes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// x coordinate&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_vN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// y coordinate&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_vN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// z coordinate&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_vN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_vN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptPlaneMin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_fD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CULLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_vN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptPlaneMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_fD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;bIntersects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// for&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bIntersects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLIPPED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VISIBLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sciencedirect.com/book/9781558605947/geometric-tools-for-computer-graphics&quot;&gt;Geometric Tools for Computer Graphics&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/Book-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-880-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/156750299&quot;&gt;平面与包围盒的相交测试 - chopper的文章 - 知乎&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/138259656&quot;&gt;射线与包围盒的相交测试 - chopper的文章 - 知乎&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.taylorfrancis.com/books/mono/10.1201/b22086/real-time-rendering-fourth-edition-tomas-akenine-mo%C2%A8ller-eric-haines-naty-hoffman?context=ubx&amp;amp;refId=579e65e7-e3e8-45ea-b45b-317d05c7fb79&quot;&gt;Real-time rendering 1999[1],2002[2],2008[3],2018[4]&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/Book-2018-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-2782-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">MBB 最小包围盒 [Minimum bounding box]</summary></entry><entry><title type="html">Operator For Image</title><link href="https://ucas.io/3d/Operator-For-Image/" rel="alternate" type="text/html" title="Operator For Image" /><published>2021-09-27T14:57:40+08:00</published><updated>2021-09-27T14:57:40+08:00</updated><id>https://ucas.io/3d/Operator-For-Image</id><content type="html" xml:base="https://ucas.io/3d/Operator-For-Image/">&lt;h2 id=&quot;sobel-operator---1968-索伯算子-索贝尔算子&quot;&gt;Sobel Operator - 1968 [索伯算子, 索贝尔算子]&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/publication/239398674_An_Isotropic_3x3_Image_Gradient_Operator&quot;&gt;Paper - An Isotropic 3x3 Image Gradient Operator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/profile/Irwin-Sobel/publication/239398674_An_Isotropic_3x3_Image_Gradient_Operator/links/557e06f508aeea18b777c389/An-Isotropic-3x3-Image-Gradient-Operator.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Formula
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
        G_x &amp;= \begin{bmatrix}
            +1&amp;0&amp;-1\\+2&amp;0&amp;-2\\+1&amp;0&amp;-1\\
        \end{bmatrix} * IMG\\
        G_y &amp;= \begin{bmatrix}
            +1&amp;+2&amp;+1\\0&amp;0&amp;0\\-1&amp;-2&amp;-1\\
        \end{bmatrix} * IMG\\
        G &amp;= \sqrt{G_x^2 + G_y^2}\\
        \Theta &amp;= \arctan(\frac{G_y}{G_x})=atan2(G_x, G_y)
    \end{aligned}
$$&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenMvs
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927161159.png&quot; alt=&quot;20210927161159&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Related
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/B9780080515816500271&quot;&gt;Digital step edges from zero crossing of second directional derivatives&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/B9780080515816500271?via%3Dihub&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/TPAMI-1987-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-1690-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927160347.png&quot; alt=&quot;20210927160347&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927162819.png&quot; alt=&quot;20210927162819&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;scharr-operatorfilter---2000-沙尔算子&quot;&gt;Scharr Operator(Filter) - 2000 [沙尔算子]&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/publication/36148383_Optimal_operators_in_digital_image_processing_Elektronische_Ressource&quot;&gt;Paper written in German - Optimal operators in digital image processing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/Phd_thesis-2000-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-145-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.researchgate.net/profile/Hanno-Scharr/publication/36148383_Optimal_operators_in_digital_image_processing_Elektronische_Ressource/links/54257c130cf238c6ea741031/Optimal-operators-in-digital-image-processing-Elektronische-Ressource.pdf&quot;&gt;Paper.pdf&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sobel Operator&lt;/code&gt; does not exhibit a good rotational symmetry (about 1° of error)&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scharr filter&lt;/code&gt; results in a less rotational variance than the Sobel filter &lt;a href=&quot;https://scikit-image.org/docs/dev/auto_examples/edges/plot_edge_filter.html&quot;&gt;scikit - edge filter&lt;/a&gt;&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
        \alpha_{1,ref}(\mathbf{\tilde{k}})&amp;=\arctan(\frac{\tilde{k_y}}{\tilde{k_x}})\\
        \alpha_{1}(\mathbf{\tilde{k},d})&amp;=\arctan(\frac{\hat{D}_y}{\hat{D}_x})\\
        d(\mathbf{\tilde{k,d}})&amp;=\alpha_{1}(\mathbf{\tilde{k},d}) - \alpha_{1,ref}(\mathbf{\tilde{k}})
    \end{aligned}
$$&lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927184146.png&quot; alt=&quot;20210927184146&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Formula
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
        G_x &amp;= \begin{bmatrix}
            +3&amp;0&amp;-3\\+10&amp;0&amp;-10\\+3&amp;0&amp;-3\\
        \end{bmatrix} * IMG\\
        G_y &amp;= \begin{bmatrix}
            +3&amp;+10&amp;+3\\0&amp;0&amp;0\\-3&amp;-10&amp;-3\\
        \end{bmatrix} * IMG\\
        G &amp;= \sqrt{G_x^2 + G_y^2}\\
        \Theta &amp;= \arctan(\frac{G_y}{G_x})=atan2(G_x, G_y)
    \end{aligned}
$$&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927185639.png&quot; alt=&quot;20210927185639&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927185750.png&quot; alt=&quot;20210927185750&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prewitt-operator---1970-普鲁伊特算子&quot;&gt;Prewitt operator - 1970 [普鲁伊特算子]&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://books.google.com/books?hl=zh-CN&amp;amp;lr=&amp;amp;id=vp-w_pC9JBAC&amp;amp;oi=fnd&amp;amp;pg=PA75&amp;amp;dq=Object+Enhancement+and+Extraction&amp;amp;ots=sAD85lrCIa&amp;amp;sig=NIFwSGOQDOSebsLUcKx9PIwKFOM#v=onepage&amp;amp;q=Object%20Enhancement%20and%20Extraction&amp;amp;f=false&quot;&gt;Book - Object Enhancement and Extraction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/Book-1970-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-2151-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Formula
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
        G_x &amp;= \begin{bmatrix}
            +1&amp;0&amp;-1\\+1&amp;0&amp;-1\\+1&amp;0&amp;-1\\
        \end{bmatrix} * IMG\\
        G_y &amp;= \begin{bmatrix}
            +1&amp;+1&amp;+1\\0&amp;0&amp;0\\-1&amp;-1&amp;-1\\
        \end{bmatrix} * IMG\\
        G &amp;= \sqrt{G_x^2 + G_y^2}\\
        \Theta &amp;= \arctan(\frac{G_y}{G_x})=atan2(G_x, G_y)
    \end{aligned}
$$&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Related
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cqvip.com/qk/84018x/200921/32051803.html&quot;&gt;一种改进的图像边缘检测算法💩🤮&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/科学技术与工程-2009-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-5-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://awsdownload.cqvip.com/downloadpaper/api/v1/pdf/stream/2009/32051803?infos=RkFFREVHRk1FQkFNRkdGSEFMQUdBSUZIRkNCRkZFQURBTEFMQk5BQkFDQU5BQUJPQUxBQUZDQU5CTUFNRkZBQUFIQUhGQkFDQUlGTEZGRkZGQ0JOQUNBRkFCQUJCUEFBQUJBQ0FGQUVBSkFJQURCTUFDQUxBQkFGQUFBQkFCQUdCTUFFQlBBRkJPQkhBQ0FEQUJBREJOQUZBSUJGQUNBRUJEQURBSkFQQURBT0FLQUhBQUJORkVGR0ZDRk1BRkFMQUVBS0FJRkJBR0ZPQUJGQUFLQUFGQ0FFQUZBQkZFRkFGQ0FBRkRGR0ZEQUxBQUFMQUFBS0JQQUZCT0FJ&amp;amp;clientID=cqvip4fd848bc-d089-4350-82b8-4e345a79cefa&amp;amp;fileName=%e4%b8%80%e7%a7%8d%e6%94%b9%e8%bf%9b%e7%9a%84%e5%9b%be%e5%83%8f%e8%be%b9%e7%bc%98%e6%a3%80%e6%b5%8b%e7%ae%97%e6%b3%95.pdf&amp;amp;algorithm=0&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927193452.png&quot; alt=&quot;20210927193452&quot; height=&quot;400px&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;roberts-cross-罗伯茨算子&quot;&gt;Roberts cross [罗伯茨算子]&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dspace.mit.edu/bitstream/handle/1721.1/11589/33959125-MIT.pdf&quot;&gt;Machine Perception Of Three-Dimensional Solids&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/MIT-1963-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-2971-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Formula
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
        G_x &amp;= \begin{bmatrix}
            +1&amp;0\\0&amp;-1
        \end{bmatrix} * IMG\\
        G_y &amp;= \begin{bmatrix}
            0&amp;+1\\-1&amp;0
        \end{bmatrix} * IMG\\
        G &amp;= \sqrt{G_x^2 + G_y^2}\\
        \Theta &amp;= \arctan(\frac{G_y}{G_x})-\frac{3\pi}{4}
    \end{aligned}
$$&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compare-of-them&quot;&gt;Compare of them&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210927195227.png&quot; alt=&quot;20210927195227&quot; /&gt;&lt;/p&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Sobel Operator - 1968 [索伯算子, 索贝尔算子]</summary></entry><entry><title type="html">Texture code reading</title><link href="https://ucas.io/3d/Code-Reading/" rel="alternate" type="text/html" title="Texture code reading" /><published>2021-09-26T19:51:42+08:00</published><updated>2021-09-26T19:51:42+08:00</updated><id>https://ucas.io/3d/Code-Reading</id><content type="html" xml:base="https://ucas.io/3d/Code-Reading/">&lt;ul&gt;
  &lt;li&gt;TextureMesh
    &lt;ul&gt;
      &lt;li&gt;FaceViewSelection
        &lt;ul&gt;
          &lt;li&gt;ListVertexFaces✔️ // extract array of triangles incident to each vertex
            &lt;ul&gt;
              &lt;li&gt;EmptyExtra✔️&lt;/li&gt;
              &lt;li&gt;ListIncidenteFaces✔️&lt;/li&gt;
              &lt;li&gt;ListBoundaryVertices✔️, // 边界点检查，在面中，只使用了1次的点是边界点，另外，代码中假设每个点通常不会超过12个面使用
                &lt;ul&gt;
                  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210926235332.png&quot; alt=&quot;20210926235332&quot; /&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;// create texture patches
            &lt;ul&gt;
              &lt;li&gt;ListCameraFaces // list all views for each face
                &lt;ul&gt;
                  &lt;li&gt;//create vertices &lt;strong&gt;octree&lt;/strong&gt; of vertices✔️&lt;/li&gt;
                  &lt;li&gt;//extract array of faces viewed by each image✔️
                    &lt;ul&gt;
                      &lt;li&gt;//compute gradient magnitude✔️&lt;/li&gt;
                      &lt;li&gt;//select faces inside view frustum✔️
                        &lt;ul&gt;
                          &lt;li&gt;plane with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AABB&lt;/code&gt;✔️&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;//project all triangles in this view and keep the closest ones&lt;/li&gt;
                      &lt;li&gt;//compute the projection area of visible faces&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;// create faces graph&lt;/li&gt;
          &lt;li&gt;// assign the best view to each face
            &lt;ul&gt;
              &lt;li&gt;// find connected components&lt;/li&gt;
              &lt;li&gt;// map face ID from global to component space&lt;/li&gt;
              &lt;li&gt;// normalize quality values&lt;/li&gt;
              &lt;li&gt;// initialize inference structures&lt;/li&gt;
              &lt;li&gt;// set data costs
                &lt;ul&gt;
                  &lt;li&gt;// set costs for label 0 (undefined)&lt;/li&gt;
                  &lt;li&gt;// set data costs for all labels (except label 0 - undefined)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;// assign the optimal view (label) to each face&lt;/li&gt;
              &lt;li&gt;// extract resulting labeling&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;// create texture patches
            &lt;ul&gt;
              &lt;li&gt;// divide graph in sub-graphs of connected faces having the same label&lt;/li&gt;
              &lt;li&gt;// find connected components: texture patches&lt;/li&gt;
              &lt;li&gt;// last texture patch contains all faces with no texture&lt;/li&gt;
              &lt;li&gt;// remove all patches with invalid label (except the last one) and create the map from the old index to the new one&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;GenerateTexture&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">TextureMesh FaceViewSelection ListVertexFaces✔️ // extract array of triangles incident to each vertex EmptyExtra✔️ ListIncidenteFaces✔️ ListBoundaryVertices✔️, // 边界点检查，在面中，只使用了1次的点是边界点，另外，代码中假设每个点通常不会超过12个面使用 // create texture patches ListCameraFaces // list all views for each face //create vertices octree of vertices✔️ //extract array of faces viewed by each image✔️ //compute gradient magnitude✔️ //select faces inside view frustum✔️ plane with AABB✔️ //project all triangles in this view and keep the closest ones //compute the projection area of visible faces // create faces graph // assign the best view to each face // find connected components // map face ID from global to component space // normalize quality values // initialize inference structures // set data costs // set costs for label 0 (undefined) // set data costs for all labels (except label 0 - undefined) // assign the optimal view (label) to each face // extract resulting labeling // create texture patches // divide graph in sub-graphs of connected faces having the same label // find connected components: texture patches // last texture patch contains all faces with no texture // remove all patches with invalid label (except the last one) and create the map from the old index to the new one GenerateTexture</summary></entry><entry><title type="html">Build And Run Texturemesh At Ucas Machine</title><link href="https://ucas.io/Build-And-Run-TextureMesh-at-UCAS-machine/" rel="alternate" type="text/html" title="Build And Run Texturemesh At Ucas Machine" /><published>2021-09-24T00:00:00+08:00</published><updated>2021-09-24T00:00:00+08:00</updated><id>https://ucas.io/Build-And-Run-TextureMesh-at-UCAS-machine</id><content type="html" xml:base="https://ucas.io/Build-And-Run-TextureMesh-at-UCAS-machine/"></content><author><name>麦丽素</name></author><summary type="html"></summary></entry><entry><title type="html">Clion Debug</title><link href="https://ucas.io/3d/Clion-Debug/" rel="alternate" type="text/html" title="Clion Debug" /><published>2021-09-23T16:24:52+08:00</published><updated>2021-09-23T16:24:52+08:00</updated><id>https://ucas.io/3d/Clion-Debug</id><content type="html" xml:base="https://ucas.io/3d/Clion-Debug/">&lt;h2 id=&quot;problem-list&quot;&gt;Problem List&lt;/h2&gt;

&lt;h3 id=&quot;windows-xps-build&quot;&gt;windows [xps] build&lt;/h3&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;[ 75%] Linking CXX executable ..\..\bin\x86\InterfaceVisualSFM.exe
LINK: command &quot;... C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\lib\Win32\cuda.lib ...&quot; failed (exit code 1120) with the following output:
MVS.lib(Mesh.cpp.obj) : error LNK2001: 无法解析的外部符号 cuGetErrorString
MVS.lib(Mesh.cpp.obj) : error LNK2001: 无法解析的外部符号 cuGetErrorName
MVS.lib(Mesh.cpp.obj) : error LNK2001: 无法解析的外部符号 cuParamSetSize
MVS.lib(Mesh.cpp.obj) : error LNK2001: 无法解析的外部符号 cuFuncSetBlockShape
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;Common.lib(CUDA.cpp.obj) : error LNK2001: 无法解析的外部符号 cuStreamWaitEvent
Common.lib(CUDA.cpp.obj) : error LNK2001: 无法解析的外部符号 cuModuleUnload
..\..\bin\x86\InterfaceVisualSFM.exe : fatal error LNK1120: 33 个无法解析的外部命令
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;consider it about cuda version
    &lt;ul&gt;
      &lt;li&gt;Download &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CUDA Driver api&lt;/code&gt; &lt;a href=&quot;https://docs.nvidia.com/cuda/pdf/CUDA_Driver_API.pdf&quot;&gt;file.pdf&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210923163138.png&quot; alt=&quot;20210923163138&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dumpbin.exe&lt;/code&gt;&lt;/p&gt;

        &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;\dumpbin.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\lib\Win32\cuda.lib&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/symbols&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/exports&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;get list of function that exported by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cuda.lib&lt;/code&gt; file&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210923163629.png&quot; alt=&quot;20210923163629&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210923163648.png&quot; alt=&quot;20210923163648&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;Dont how to fix it.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Here a list about this issue
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/cdcseacave/openMVS/issues/147#issuecomment-263116200&quot;&gt;https://github.com/cdcseacave/openMVS/issues/147&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-lcuda&lt;/code&gt; at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openMVS/libs/MVS/CMakeLists.txt&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;have tried, does not work, cause &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-lcuda&lt;/code&gt; will by ignore under windows system&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/19981506/5587080&quot;&gt;how-to-let-cmake-find-cuda&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-DCUDA_TOOLKIT_ROOT_DIR=cuda_path_the_version_you_want&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;ATTATION&lt;/strong&gt;: for example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-DCUDA_TOOLKIT_ROOT_DIR=&quot;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.4&quot;&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;You need double slash &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\&lt;/code&gt; at path&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;change-to-other-machineworkstation&quot;&gt;change to other machine[workstation]&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fixed&lt;/strong&gt;????!!!
    &lt;ul&gt;
      &lt;li&gt;Mayby too many difference cuda version at xps?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;By the way
    &lt;ul&gt;
      &lt;li&gt;need use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--use-cuda=0&lt;/code&gt; to disable gpu at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RefineMesh&lt;/code&gt; step&lt;/li&gt;
      &lt;li&gt;otherwise a gpu error message will by throw, but obviously, there is very enough memory at here.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210923165608.png&quot; alt=&quot;20210923165608&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CUDA error: cuMemFree(pData) (CUDA_ERROR_ILLEGAL_ADDRESS (code 700) - an illegal memory access was encountered)&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A very shity result be generated here
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210923165954.png&quot; alt=&quot;20210923165954&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;set--dcmake_verbose_makefileboolon-at-cmake-config-at-clion&quot;&gt;Set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON&lt;/code&gt; at cmake config at Clion&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Here the ucas machine looks like&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;C:\PROGRA~2\MICROS~3\2019\ENTERP~1\VC\Tools\MSVC\1429~1.301\bin\Hostx86\x64\link.exe @CMakeFiles\DensifyPointCloud.dir\objects1.rsp /out:..\..\bin\x64\DensifyPointCloud.exe /implib:..\..\bin\x64\DensifyPointCloud.lib /pdb:
C:\workspace\workspace_3d\openMVS\cmake-build-release-visual-studio\bin\x64\DensifyPointCloud.pdb /version:0.0 /machine:x64 /INCREMENTAL:NO /LTCG /subsystem:console -LIBPATH:
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib -LIBPATH:
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\debug\lib ..\..\lib\x64\MVS.lib ..\..\lib\x64\Math.lib ..\..\lib\x64\IO.lib ..\..\lib\x64\Common.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_iostreams-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_program_options-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_system-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_serialization-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_regex-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_highgui.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_ml.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_objdetect.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_photo.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_stitching.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_video.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_calib3d.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_dnn.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_features2d.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_flann.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_videoio.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_imgcodecs.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_imgproc.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_core.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\libpng16.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\zlib.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\jpeg.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\tiff.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\lzma.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\zlib.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\jpeg.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\tiff.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\lzma.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\mpfr.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\gmp.lib 
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\lib\x64\cuda.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:..\..\bin\x64\DensifyPointCloud.exe.manifest
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;and here is the xps machine&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;C:\PROGRA~2\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x64\link.exe /nologo @CMakeFiles\DensifyPointCloud.dir\objects1.rsp /out:..\..\bin\x86\DensifyPointCloud.exe /implib:..\..\bin\x86\DensifyPointCloud.lib /pdb:
C:\workspace\workspace_3d\openMVS\cmake-build-release-visual-studio\bin\x86\DensifyPointCloud.pdb /version:0.0 /machine:x64 /INCREMENTAL:NO /LTCG /subsystem:console -LIBPATH:
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib -LIBPATH:
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\debug\lib ..\..\lib\x86\MVS.lib ..\..\lib\x86\Math.lib ..\..\lib\x86\IO.lib ..\..\lib\x86\Common.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_iostreams-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_program_options-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_system-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_serialization-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\boost_regex-vc140-mt.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_highgui.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_ml.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_objdetect.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_photo.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_stitching.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_video.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_calib3d.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_dnn.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_features2d.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_flann.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_videoio.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_imgcodecs.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_imgproc.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\opencv_core.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\libpng16.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\zlib.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\jpeg.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\tiff.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\lzma.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\zlib.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\jpeg.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\tiff.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\lzma.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\mpfr.lib 
C:\workspace\workspace_3d\vcpkg\installed\x64-windows\lib\gmp.lib 
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\lib\Win32\cuda.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:..\..\bin\x86\DensifyPointCloud.exe.manifest
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;After file compare&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210923184051.png&quot; alt=&quot;20210923184051&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;xps has a wrong target triplet&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;todo&quot;&gt;TODO&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;still not figure it out how it happen, reinstalling vcpkg, wish it be helpful.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Problem List</summary></entry><entry><title type="html">Texture Paper Reading - [Rethinking Texture Mapping]</title><link href="https://ucas.io/3d/Texture-Paper-Reading-Rethinking-Texture-Mapping/" rel="alternate" type="text/html" title="Texture Paper Reading - [Rethinking Texture Mapping]" /><published>2021-09-21T19:03:21+08:00</published><updated>2021-09-21T19:03:21+08:00</updated><id>https://ucas.io/3d/Texture-Paper-Reading-%5BRethinking-Texture-Mapping%5D</id><content type="html" xml:base="https://ucas.io/3d/Texture-Paper-Reading-Rethinking-Texture-Mapping/">&lt;h2 id=&quot;rethinking-texture-mapping---state-of-the-art-report&quot;&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13656&quot;&gt;Rethinking Texture Mapping - State of The Art Report&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/sig_graph-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/EG-2019-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-26-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cemyuksel.com/courses/conferences/siggraph2017-rethinking_texture_mapping/rethinking_texture_mapping_course_notes.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-scope&quot;&gt;1.1 Scope&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Perfecting the Traditional Texture Mapping
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2010.01746.x&quot;&gt;RNLL10 - Invisible Seams&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CGF-2010-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-53-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://hal.inria.fr/inria-00547713/PDF/seamless.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;LFJG17 - Seam Erasure
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.cs.toronto.edu/~jacobson/images/seamless-seam-erasure-and-seam-aware-decoupling-of-shape-from-mesh-resolution-siggraph-asia-2017-compressed-liu-et-al.pdf&quot;&gt;Seamless: seam erasure and seam-aware decoupling of shape from mesh resolution.&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/SIGGRAPH_Asia-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-24-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.cs.toronto.edu/~jacobson/images/seamless-seam-erasure-and-seam-aware-decoupling-of-shape-from-mesh-resolution-siggraph-asia-2017-compressed-liu-et-al.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.tandfonline.com/doi/abs/10.1080/2151237X.2012.654054&quot;&gt;Tar12 - Seamless Toroidal/Cylindrical Textures&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/Journal_of_Graphics_Tools-2012-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-9-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.tandfonline.com/doi/abs/10.1080/2151237X.2012.654054&quot;&gt;Cylindrical and toroidal parameterizations without vertex seams - Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/1057432.1057441&quot;&gt;PCK04 - Seamless Texture Atlases&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SGP-2004-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-98-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://pages.jh.edu/dighamm/research/2004_01_sta.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Connectivity-based Representations
    &lt;ul&gt;
      &lt;li&gt;BL08 - Ptex
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.disneyanimation.com/publications/ptex-per-face-texture-mapping-for-production-rendering/&quot;&gt;Ptex: Per‐face texture mapping for production rendering&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CGF-2008-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-104-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/1731047.1731053&quot;&gt;YKH10 - Mesh Colors&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2010-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-67-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/3105762.3105780&quot;&gt;Yuk16 - Mesh Color Textures&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/HPG-2017-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-10-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sparse Volumetric Textures
    &lt;ul&gt;
      &lt;li&gt;KE02 - Adaptive Texture Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SIGGRAPH-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/EG-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-160-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/pdf/10.5555/569046.569048&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/566654.566652&quot;&gt;BD02,LHN05 - Octree Textures&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2002-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-160-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=802C3674FAE16C6BB6DCD5200731CE5C?doi=10.1.1.300.6755&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;CB04 - Brick Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.91.6683&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;An irradiance atlas for global illumination in complex production scene.pdf&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/EGSR-2004-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-99-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Perfect Spatial Hashing
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2006-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-243-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.453.2027&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Volume-based Parameterizations
    &lt;ul&gt;
      &lt;li&gt;LD07 - TileTrees
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SI3D-2007-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-48-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://hal.inria.fr/inria-00606799/document&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;THCM04 - PolyCube-Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2004-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-305-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://irinsubria.uninsubria.it/retrieve/handle/11383/1492755/599/pcm_da_acm.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tar16 - Volume-Encoded UV-Maps
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2016-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-17-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://vcg.isti.cnr.it/volume-encoded-uv-maps/volume-encoded-uv-maps.pdf&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;12-evaluation-criteria&quot;&gt;1.2 Evaluation Criteria&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Applicability.&lt;/li&gt;
  &lt;li&gt;Usability.&lt;/li&gt;
  &lt;li&gt;Filtering Quality.
    &lt;ul&gt;
      &lt;li&gt;magnification filtering
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;on-the-fly bilinear interpolation&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;minification filtering&lt;/li&gt;
      &lt;li&gt;anisotropic filtering[各向异性过滤]
        &lt;ul&gt;
          &lt;li&gt;allows skewed filter shapes&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Performance.&lt;/li&gt;
  &lt;li&gt;Implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;traditional-2d-texture-mapping&quot;&gt;Traditional 2D Texture Mapping&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;assigning uv coordinates to mesh vertices&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;perfecting-traditional-texture-mapping&quot;&gt;Perfecting Traditional Texture Mapping&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/3197517.3201317&quot;&gt;PKCH18 - Gradient-domain Processing Within a Texture Atlas&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/ToG-2018-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-12-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/pdf/10.1145/3197517.3201317&quot;&gt;Paper.pdf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;texture seams and texture distortions&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://patents.google.com/patent/US10192346B2/en&quot;&gt;DGM18 - Generating uv maps for modified meshes - US10192346B2&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/patent-2019-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-2-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;automatize the adaptations of the uv map&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/abs/10.1145/383259.383307&quot;&gt;SSGH01 - Texture mapping progressive meshes&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/SIG_GRAPH-2001-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-900-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;the poor interoperability of LoD-pyramids and atlas-based textures&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;invisible-seams&quot;&gt;Invisible Seams&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921101757.png&quot; alt=&quot;20210921101757&quot; height=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Traditional Texture Mapping
    &lt;ul&gt;
      &lt;li&gt;inconsistent &lt;strong&gt;bilinear filtering&lt;/strong&gt; performed on either side of the seams
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bilinear Filtering&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;alias: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bilinear Interpolation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bilinear texture mapping&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/e/ea/BilinearInterpolation.svg&quot; alt=&quot;wiki&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;
                &lt;div class=&quot;kdmath&quot;&gt;$$
\begin{aligned}
      f(x, y_1) &amp;= \frac{x_2-x}{x_2-x_1}f(Q_{11}) + \frac{x-x_1}{x_2-x_1}f(Q_{21})\\
      f(x, y_2) &amp;= \frac{x_2-x}{x_2-x_1}f(Q_{12}) + \frac{x-x_1}{x_2-x_1}f(Q_{22})\\
      f(x, y) &amp;= \frac{y_2-y}{y_2-y_1}f(x, y_1) + \frac{y-y_1}{y_2-y_1}f(x, y_2)\\
        &amp;=\frac{1}{(x_2-x_1)(y_2-y_1)}\begin{bmatrix}
            x_2-x&amp;x-x_1
        \end{bmatrix}\begin{bmatrix}
            f(Q_{11})&amp;f(Q_{12})\\f(Q_{21})&amp;f(Q_{22})
        \end{bmatrix}\begin{bmatrix}
        y_2-y\\y-y_1
        \end{bmatrix}
  \end{aligned}
$$&lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;extension: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trilinear interpolation&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;placing both sides of the seams axis-aligned in uv space (either horizontally or vertically) with matching lengths, and assigning texels values that are exactly replicated along the seam.&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;ul&gt;
      &lt;li&gt;cylindrical/toroidal mappings
        &lt;ul&gt;
          &lt;li&gt;[Tar12], [THCM04]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[RNLL10]
    &lt;ul&gt;
      &lt;li&gt;introduces some constraints
        &lt;ol&gt;
          &lt;li&gt;integer resolution jumps across seams
            &lt;ul&gt;
              &lt;li&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;one side of the seam to be &lt;strong&gt;n times&lt;/strong&gt; the other, here $n \ge 1, n \in \mathbb{Z}$, longer side are &lt;strong&gt;linear interpolations&lt;/strong&gt; of the values on the shorter side&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921143206.png&quot; alt=&quot;20210921143206&quot; /&gt;&lt;/li&gt;
              &lt;li&gt;generating uv layouts with motorcycle graphs[SPGT18]
                &lt;ul&gt;
                  &lt;li&gt;motorcycle graphs
                    &lt;ul&gt;
                      &lt;li&gt;&lt;a href=&quot;https://www.imdb.com/video/vi4228627993?playlistId=tt0084827&amp;amp;ref_=tt_ov_vi&quot;&gt;Tron 1982 movie - imdb&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href=&quot;https://jeffe.cs.illinois.edu/open/cycles.html&quot;&gt;Crashing Motorcycles Efficiently&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href=&quot;https://www.wolframcloud.com/objects/demonstrations/MotorcycleGraphs-source.nb&quot;&gt;wolfram&lt;/a&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;&lt;a href=&quot;https://www.ics.uci.edu/~goodrich/pubs/geomproc.pdf&quot;&gt;Motorcycle Graphs: Canonical Quad Mesh Partitioning&lt;/a&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CGF-2008-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-65-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;oblique placement of seams in the 2D texture space
            &lt;ul&gt;
              &lt;li&gt;
                &lt;blockquote&gt;
                  &lt;p&gt;two sides of the seams are constrained to be matching in parametric space up to an integer translation and rotations by an integer multiple of $\frac{\pi}{2}$&lt;/p&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921143339.png&quot; alt=&quot;20210921143339&quot; /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[LFJG17] &lt;strong&gt;seamless cuts&lt;/strong&gt; or &lt;strong&gt;erased seam&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;&lt;strong&gt;no constraint&lt;/strong&gt; is explicitly imposed a priori on uv assignment&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;minimizes the discrepancy from the initial configuration&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;$\underset{\min p}{E_{lerp}(e_i,x_0,x_1)}=\int_0^1\vert B(e_i(\gamma), p)-(\gamma x_0+(1-\gamma)x_1)\vert^2d\gamma$&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;minor technical note, making seams invisible (with any method) may require using texture resolutions that are &lt;strong&gt;powers of 2&lt;/strong&gt;, seams can &lt;strong&gt;still be visible&lt;/strong&gt; when using &lt;strong&gt;arbitrary texture resolutions&lt;/strong&gt;&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;seamless-toroidalcylindrical-textures&quot;&gt;Seamless Toroidal/Cylindrical Textures&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ignore the restriction for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;only allows seams at mesh edges&lt;/code&gt; when Toroidal/Cylindrical [Tar12] 💩
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921152148.png&quot; alt=&quot;20210921152148&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;Cylindrical -&amp;gt; rectangular&lt;/li&gt;
      &lt;li&gt;Toroidal -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;two orthogonal&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;seamless-texture-atlases&quot;&gt;Seamless Texture Atlases&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;[PCK04]Mip-mapping: Texture resolutions may be selected or
blended on a per-fragment basis&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;ul&gt;
      &lt;li&gt;Mip: multum in parvo,[放置很多东西的小空间]&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mipmap&quot;&gt;Mipmap - wiki&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://paroj.github.io/gltut/Texturing/Tut15%20Magnification.html&quot;&gt;Paroj - Linear Filtering&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921163401.png&quot; alt=&quot;20210921163401&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921161916.png&quot; alt=&quot;20210921161916&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921161952.png&quot; alt=&quot;20210921161952&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921162041.png&quot; alt=&quot;20210921162041&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;connectivity-based-representations&quot;&gt;Connectivity-based Representations&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[BL08] Ptex, Disney Animation and Pixar studios
    &lt;ul&gt;
      &lt;li&gt;How to
        &lt;ul&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;Since each face effectively gets its own texture, it is not affected by geometrical deformations of the model.&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;Ptex stores &lt;strong&gt;four face indices per face&lt;/strong&gt;, indicating the four neighbors of each quad face&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;our edge indices are stored per face to represent which edge of each neighboring face is the shared edge&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;resolution adjusted
        &lt;ul&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;texture resolution of each face can be adjusted independently&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;setting the texture resolution of a face based on its size.&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;blockquote&gt;
              &lt;p&gt;texture filtering near edges becomes &lt;strong&gt;difficult&lt;/strong&gt;&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[YKH10] Mesh colors
    &lt;ul&gt;
      &lt;li&gt;Indeed, the lowest-resolution mesh colors are vertex colors, &lt;strong&gt;which store a single texture value per vertex&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921170909.png&quot; alt=&quot;20210921170909&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[Yuk16] Mesh Color Textures
    &lt;ul&gt;
      &lt;li&gt;GPU-friendly&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921171800.png&quot; alt=&quot;20210921171800&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sparse-volumetric-representations&quot;&gt;Sparse Volumetric Representations&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;store &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;texture data&lt;/code&gt; in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;voxel&lt;/code&gt; grid covering the object&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Issue list
    &lt;ol&gt;
      &lt;li&gt;thin surfaces get the same color on both sides
        &lt;ul&gt;
          &lt;li&gt;can be alleviated by storing normals alongside colors [BD02], at the expense of a further increase in storage and lookup cost&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;cost of trilinear interpolation.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;[KE02] Adaptive Texture Maps
    &lt;ul&gt;
      &lt;li&gt;With traditional texture mapping, the entire texture is encoded using the same resolution, thus wasting memory where the content has low frequency.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921180729.png&quot; alt=&quot;20210921180729&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[BD02,DGPR02, LHN05,KLS05] Octree Textures
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921180814.png&quot; alt=&quot;20210921180814&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[CB04] Brick Maps
    &lt;ul&gt;
      &lt;li&gt;RenderMan&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921181538.png&quot; alt=&quot;20210921181538&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[LH06]Perfect Spatial Hashing
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;This results in a very efficient method where the sparse data is accessed through only two texture lookups (a single indirection). However, the loss of cache coherency, due to the randomization of the access by the hash, penalizes access performance.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921181648.png&quot; alt=&quot;20210921181648&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;volume-based-parametrizations&quot;&gt;Volume-based Parametrizations&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;how to encode the mapping efficiently and how to precompute it robustly&lt;/li&gt;
  &lt;li&gt;[LD07]TileTrees
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921182759.png&quot; alt=&quot;20210921182759&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;The entire process is automatic, robust, and fast&lt;/li&gt;
      &lt;li&gt;Tiletrees suffer from the same &lt;strong&gt;distortions&lt;/strong&gt; as cube-maps&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[THCM04]PolyCube - Maps
    &lt;ul&gt;
      &lt;li&gt;extension of cube-maps[Gre86]&lt;/li&gt;
      &lt;li&gt;by substituting the cube the with an arbitrary polycube&lt;/li&gt;
      &lt;li&gt;they replace the problem of defining a uv mapping with the problem of constructing a polycube&lt;/li&gt;
      &lt;li&gt;The task of automatically or semi-automatically constructing a polycube-map
        &lt;ul&gt;
          &lt;li&gt;[LJFW08,WJH&lt;em&gt;08, HWFQ09, WYZ&lt;/em&gt;11, YZWL14, HJS*14, HZ16]
            &lt;ul&gt;
              &lt;li&gt;limiting the number of cubes&lt;/li&gt;
              &lt;li&gt;limiting the number of irregular vertices&lt;/li&gt;
              &lt;li&gt;matching the topology of the input surface&lt;/li&gt;
              &lt;li&gt;maximizing shape similarity between the two shapes&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921185711.png&quot; alt=&quot;20210921185711&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[Tar16]Volume-Encoded UV-Maps
    &lt;ul&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;volume-encoded uv-maps replace the problem of defining a uv mapping with the problem of defining a volume-encoded parameterization&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921185835.png&quot; alt=&quot;20210921185835&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210921190203.png&quot; alt=&quot;20210921190203&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Rethinking Texture Mapping - State of The Art Report</summary></entry><entry><title type="html">Texture Paper Reading Todo</title><link href="https://ucas.io/Texture-Paper-Reading-TODO/" rel="alternate" type="text/html" title="Texture Paper Reading Todo" /><published>2021-09-20T00:00:00+08:00</published><updated>2021-09-20T00:00:00+08:00</updated><id>https://ucas.io/Texture-Paper-Reading-TODO</id><content type="html" xml:base="https://ucas.io/Texture-Paper-Reading-TODO/"></content><author><name>麦丽素</name></author><summary type="html"></summary></entry><entry><title type="html">Texture for smooth 2</title><link href="https://ucas.io/3d/Texture-for-smooth2/" rel="alternate" type="text/html" title="Texture for smooth 2" /><published>2021-09-18T23:18:09+08:00</published><updated>2021-09-18T23:18:09+08:00</updated><id>https://ucas.io/3d/Texture-for-smooth2</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-smooth2/">&lt;h2 id=&quot;more-smooth-case&quot;&gt;More Smooth case&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;obj&lt;/th&gt;
      &lt;th&gt;image&lt;/th&gt;
      &lt;th&gt;ot&lt;/th&gt;
      &lt;th&gt;mr&lt;/th&gt;
      &lt;th&gt;csr&lt;/th&gt;
      &lt;th&gt;gsl&lt;/th&gt;
      &lt;th&gt;lsl&lt;/th&gt;
      &lt;th&gt;ec&lt;/th&gt;
      &lt;th&gt;result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;12w-5w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;mapple_gussian-0.1_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-5w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-8w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-3k&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-5w&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-8w&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;mapple_sm-remesh_12w-12w&lt;/td&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;texture-result&quot;&gt;Texture Result&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;kind&lt;/th&gt;
      &lt;th&gt;sm-remesh-3k&lt;/th&gt;
      &lt;th&gt;sm-remesh-5w&lt;/th&gt;
      &lt;th&gt;sm-remesh-8w&lt;/th&gt;
      &lt;th&gt;sm-remesh-12w&lt;/th&gt;
      &lt;th&gt;no-remesh-12w&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234813.png&quot; alt=&quot;20210918234813&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234735.png&quot; alt=&quot;20210918234735&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234647.png&quot; alt=&quot;20210918234647&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234540.png&quot; alt=&quot;20210918234540&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234052.png&quot; alt=&quot;20210918234052&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lion&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918234946.png&quot; alt=&quot;20210918234946&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235040.png&quot; alt=&quot;20210918235040&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235116.png&quot; alt=&quot;20210918235116&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235327.png&quot; alt=&quot;20210918235327&quot; height=&quot;100px&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;gussian-noise&quot;&gt;Gussian noise&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235542.png&quot; alt=&quot;20210918235542&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;remapping-texture&quot;&gt;ReMapping Texture&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210918235717.png&quot; alt=&quot;20210918235717&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;faces_F3_T2F_V3F&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mesh_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;materials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uint8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faces_F3_T2F_V3F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;int64&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillPoly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mesh_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 水平翻转
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hstack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">More Smooth case</summary></entry><entry><title type="html">Texture for smooth</title><link href="https://ucas.io/3d/Texture-for-smooth/" rel="alternate" type="text/html" title="Texture for smooth" /><published>2021-09-17T16:40:14+08:00</published><updated>2021-09-17T16:40:14+08:00</updated><id>https://ucas.io/3d/Texture-for-smooth</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-smooth/">&lt;h3 id=&quot;run-data-set&quot;&gt;Run Data set&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;obj&lt;/th&gt;
      &lt;th&gt;image&lt;/th&gt;
      &lt;th&gt;ot&lt;/th&gt;
      &lt;th&gt;mr&lt;/th&gt;
      &lt;th&gt;csr&lt;/th&gt;
      &lt;th&gt;gsl&lt;/th&gt;
      &lt;th&gt;lsl&lt;/th&gt;
      &lt;th&gt;ec&lt;/th&gt;
      &lt;th&gt;result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;meshlab_lap-smooth_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;meshlab_HC-lap-smooth_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;meshlab_normal-smooth_12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210917164323.png&quot; alt=&quot;20210917164323&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210917164348.png&quot; alt=&quot;20210917164348&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210917172233.png&quot; alt=&quot;20210917172233&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Same with 1&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;explaination&quot;&gt;Explaination&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;For case 4: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sommth Face Normals&lt;/code&gt; will not affect the vertex position, but affect the normal of vertex, names &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vn&lt;/code&gt; at obj file. And &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Texeture&lt;/code&gt; does not use that var for compute
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img8cf60c1524815e43726c146fc77d0cf.png&quot; alt=&quot;8cf60c1524815e43726c146fc77d0cf&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img4be3fdda52f0a00e95c494bbaf9b36e.png&quot; alt=&quot;4be3fdda52f0a00e95c494bbaf9b36e&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;obj-format&quot;&gt;Obj Format&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.cmu.edu/~mbz/personal/graphics/obj.html&quot;&gt;cmu&lt;/a&gt;
    &lt;blockquote&gt;
      &lt;p&gt;The vertex normal command specifies a normal vector. A lot of times these aren’t used, because the ‘f’ face command will use the order the ‘v’ commands are given to determine the normal instead. Like the ‘vt’ commands, they don’t mean anything until grouped with a vertex in the ‘f’ face command.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Lap-Smooth
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://diglib.eg.org/handle/10.2312/egst.20051044.053-070&quot;&gt;doi:10.2312/egst.20051044&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/EG_STARs-2005-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-232-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HC-Lap-Smooth
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.00334&quot;&gt;Improved laplacian smoothing of noisy surface meshes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.00334&quot;&gt;doi:10.1111/1467-8659.00334&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;https://img.shields.io/badge/CG-1999-blue?style=flat-square&quot; alt=&quot;j&quot; /&gt;&lt;img src=&quot;https://img.shields.io/badge/cite-574-blue?style=flat-square&quot; alt=&quot;cite&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Run Data set</summary></entry><entry><title type="html">Texture for color lion</title><link href="https://ucas.io/3d/Texture-for-color-lion/" rel="alternate" type="text/html" title="Texture for color lion" /><published>2021-09-16T21:46:52+08:00</published><updated>2021-09-16T21:46:52+08:00</updated><id>https://ucas.io/3d/Texture-for-color-lion</id><content type="html" xml:base="https://ucas.io/3d/Texture-for-color-lion/">&lt;h2 id=&quot;texture-for-colorful-lion&quot;&gt;Texture for colorful lion&lt;/h2&gt;

&lt;h3 id=&quot;params-list-and-annotation&quot;&gt;Params List and annotation&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;params&lt;/th&gt;
      &lt;th&gt;st&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;decimate&lt;/td&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;decimation factor in range [0..1] to be applied to the input surface before refinement (0 - auto, 1 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;close-holes&lt;/td&gt;
      &lt;td&gt;ch&lt;/td&gt;
      &lt;td&gt;try to close small holes in the input surface (0 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;resolution-level&lt;/td&gt;
      &lt;td&gt;rl&lt;/td&gt;
      &lt;td&gt;how many times to scale down the images before mesh refinement&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;min-resolution&lt;/td&gt;
      &lt;td&gt;mr&lt;/td&gt;
      &lt;td&gt;do not scale images lower than this resolution&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;outlier-threshold&lt;/td&gt;
      &lt;td&gt;oh&lt;/td&gt;
      &lt;td&gt;threshold used to find and remove outlier face textures (0 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cost-smoothness-ratio&lt;/td&gt;
      &lt;td&gt;csr&lt;/td&gt;
      &lt;td&gt;ratio used to adjust the preference for more compact patches (1 - best quality/worst compactness, ~0 - worst quality/best compactness)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;global-seam-leveling&lt;/td&gt;
      &lt;td&gt;gsl&lt;/td&gt;
      &lt;td&gt;generate uniform texture patches using global seam leveling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;local-seam-leveling&lt;/td&gt;
      &lt;td&gt;lsl&lt;/td&gt;
      &lt;td&gt;generate uniform texture patch borders using local seam leveling&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;texture-size-multiple&lt;/td&gt;
      &lt;td&gt;tsm&lt;/td&gt;
      &lt;td&gt;texture size should be a multiple of this value (0 - power of two)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;patch-packing-heuristic&lt;/td&gt;
      &lt;td&gt;pph&lt;/td&gt;
      &lt;td&gt;specify the heuristic used when deciding where to place a new patch (0 - best fit, 3 - good speed, 100 - best speed)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;empty-color&lt;/td&gt;
      &lt;td&gt;ec&lt;/td&gt;
      &lt;td&gt;color used for faces not covered by any image&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;orthographic-image-resolution&lt;/td&gt;
      &lt;td&gt;oir&lt;/td&gt;
      &lt;td&gt;orthographic image resolution to be generated from the textured mesh - the mesh is expected to be already geo-referenced or at least properly oriented (0 - disabled)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;run-data-set&quot;&gt;Run Data set&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;obj&lt;/th&gt;
      &lt;th&gt;image&lt;/th&gt;
      &lt;th&gt;ot&lt;/th&gt;
      &lt;th&gt;mr&lt;/th&gt;
      &lt;th&gt;csr&lt;/th&gt;
      &lt;th&gt;gsl&lt;/th&gt;
      &lt;th&gt;lsl&lt;/th&gt;
      &lt;th&gt;ec&lt;/th&gt;
      &lt;th&gt;result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;12w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;💩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;12w-5w&lt;/td&gt;
      &lt;td&gt;gird-color&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;🍺&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;12w-5w&lt;/td&gt;
      &lt;td&gt;pure-color&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;⬛&lt;/td&gt;
      &lt;td&gt;🍺&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916222654.png&quot; alt=&quot;20210916222436&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224127.png&quot; alt=&quot;20210916224127&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224422.png&quot; alt=&quot;20210916224422&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224300.png&quot; alt=&quot;20210916224300&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224507.png&quot; alt=&quot;20210916224507&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224640.png&quot; alt=&quot;20210916224552&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916224838.png&quot; alt=&quot;20210916224838&quot; height=&quot;200px&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;problem-list&quot;&gt;Problem List&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Pure color as Image&lt;/li&gt;
  &lt;li&gt;Image color of view generated by hsv palette&lt;/li&gt;
  &lt;li&gt;therefor the color of adjacent patch should be very approach&lt;/li&gt;
  &lt;li&gt;mapple remesh to 5W from 12W
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916231821.png&quot; alt=&quot;20210916231821&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;original 12W
    &lt;ul&gt;
      &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232023.png&quot; alt=&quot;20210916232023&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;As you can see, there are many wrong selected view at the back of lion
    &lt;ul&gt;
      &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blue mesh&lt;/code&gt; comes from a view from the bottom
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232251.png&quot; alt=&quot;20210916232251&quot; height=&quot;100px&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232317.png&quot; alt=&quot;20210916232317&quot; height=&quot;100px&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;red and purple&lt;/code&gt; mesh come from left, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orange&lt;/code&gt; mesh comes from right
        &lt;ul&gt;
          &lt;li&gt;&lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232524.png&quot; alt=&quot;20210916232524&quot; height=&quot;100px&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/FavorMylikes/hackmd-note/img/img20210916232825.png&quot; alt=&quot;20210916232825&quot; height=&quot;100px&quot; /&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Therefor, those bad choices can be sure that it caused by the &lt;strong&gt;normal-vector error&lt;/strong&gt; when build mesh sureface&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>麦丽素</name></author><category term="3d" /><summary type="html">Texture for colorful lion</summary></entry></feed>